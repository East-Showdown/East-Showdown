scripted_map_modes = {
	name_map_mode = {
		# the game will use name of the map mode for some strings:
		# MAPMODE_TEST_MAP_MODE MAPMODE_TEST_MAP_MODE_NAME MAPMODE_TEST_MAP_MODE_DESCRIPTION as name & desc
		# test_map_mode_tooltip & test_map_mode_tooltip_delayed for tooltips
		# GFX_mapmode_buttons_deselected_small_test_map_mode GFX_mapmode_buttons_selected_small_test_map_mode for the icons

		# there are two layers for a map mode. bottom & top
		# both are same except during rendering they will be rendered in that order
		# for each layer the game will figure out what borders to render and will ask script to pick a color for those
		top = {
		
			# type represents which borders will be used for rendering for this layer
			# or it can represent one of the hard coded map mode layers
			# must be one of following:
			#   none #will render nothing for this layer
			#   country #will render using country provinces
			#   state #will render using state provinces
			#   state_controller #will render using state provinces & controllers. if a state is shared between countries it will be called for each country
			
			#   game_map_mode_country (these are hard coded map mode layers. if these are used all other layer entries are ignored)
			#   game_map_mode_states
			#   game_map_mode_diplomacy
			#   game_map_mode_players
			#   game_map_mode_factions
			#   game_map_mode_ideology
			type = state
			
			# this trigger will be used for setting the color of a specific border
			# if trigger returns true then it will render that border
			# scope depends on type of the layer
			# scope is player
			# from scope depends on type
			#   country: current country that will be rendered
			#   state: current state that will be rendered
			#   state_controller: current state that will be rendered and from from scope will be the controller of current portion of the state
			# if return value is true the game expects you to set some temp variables which will be used as border color etc
			
			color = {
				FROM = {
					set_temp_variable = { alpha = 1.8 }
					set_temp_variable = { red = 0.85 }
					set_temp_variable = { green = 0.85 }
					set_temp_variable = { blue = 0.85 }
					if = {
						limit = {
							has_global_flag = word_name_not_start
						}
						if = {
							limit = {
								is_controlled_by = UKR
							}
							set_temp_variable = { red = 0.9 }
							set_temp_variable = { green = 0.9 }
							set_temp_variable = { blue = 0.0 }
						}
					}
					if = {
						limit = {
							has_global_flag = war_has_started
						}
						if = {
							limit = {
								is_controlled_by = UKR
							}
							set_temp_variable = { red = 0.5 }
							set_temp_variable = { green = 0.5 }
							set_temp_variable = { blue = 0.0 }
						}
						if = {
							limit = {
								has_state_flag = not_goal_of_russia
							}
							set_temp_variable = { red = 0.9 }
							set_temp_variable = { green = 0.9 }
							set_temp_variable = { blue = 0.0 }
						}
					}
					if = {
						limit = {
							region = 31
						}
						set_temp_variable = { red = 0.75 }
						set_temp_variable = { green = 0.5 }
						set_temp_variable = { blue = 0.0 }
						if = {
							limit = {
								NOT = {
									is_controlled_by = UKR
								}
							}
							set_temp_variable = { red = 0.92 }
							set_temp_variable = { green = 0.0 }
							set_temp_variable = { blue = 0.0 }
						}
					}
					if = {
						limit = {
							is_controlled_by = RUS
						}
						set_temp_variable = { red = 0.65 }
						set_temp_variable = { green = 0.0 }
						set_temp_variable = { blue = 0.0 }
					}
					if = {
						limit = {
							controller = {
								is_in_faction_with = NTO
							}
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.0 }
						set_temp_variable = { blue = 7.0 }
					}
					if = {
						limit = {
							controller = {
								gives_military_access_to = RUS
							}
						}
						set_temp_variable = { red = 0.9 }
						set_temp_variable = { green = 0.55 }
						set_temp_variable = { blue = 0.55 }
					}
					if = {
						limit = {
							owner = {
								tag = UKR
							}
							OR = {
								is_controlled_by = RUS
								is_controlled_by = BLR
							}
						}
						set_temp_variable = { red = 0.86 }
						set_temp_variable = { green = 0.36 }
						set_temp_variable = { blue = 0.36 }
					}
					if = {
						limit = {
							controller = {
								is_in_faction_with = RUS
								NOT = {
									tag = RUS
								}
							}
						}
						set_temp_variable = { red = 0.9 }
						set_temp_variable = { green = 0.33 }
						set_temp_variable = { blue = 0.33 }
					}
					if = {
						limit = {
							controller = {
								has_idea = {
									partially_involved_in_smo_in_ukraine
								}
							}
						}
						set_temp_variable = { red = 0.9 }
						set_temp_variable = { green = 0.25 }
						set_temp_variable = { blue = 0.25 }
					}
					if = {
						limit = {
							is_controlled_by = RUS
							has_state_flag = incorporated_territory
						}
						set_temp_variable = { red = 0.70 }
						set_temp_variable = { green = 0.0 }
						set_temp_variable = { blue = 0.0 }
					}
					if = {
						limit = {
							is_controlled_by = RUS
							has_state_flag = RUS_withdrawal_from_region
						}
						set_temp_variable = { red = 0.95 }
						set_temp_variable = { green = 0.515 }
						set_temp_variable = { blue = 0.515 }
					}
				}
			}
			
			
			# a target list that can be used to limit which scopes will be rendered on map
			# similar to targeted decisions
			# highly recommended for perfomance, otherwise it will try to render for every scope
			targets = {
				#target_array = robot_map_icon_array
				#targets
				#target_trigger
				#... everything targeted decisions support
			}
			
			# if the border has thickness then set
			thickness = no
		}
		
		bottom = {
			# same structure as top
			
			type = none
		}
	
	
		# if we want to show texts on map this you can set far_text & near_text
		# must be one of the:
		#  none
		#  country
		#  state
		#  faction
		#  player
		
		far_text = country
		near_text = state

		# if yes, the game will update the map mode daily_update
		# otherwise force_update_map_mode effect can be used
		update_daily = yes

	}
	more_mapmodes_core_map_mode = {
		top = {
			type = state

			color = {
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					if = {
						limit = {
							is_core_of = ROOT
						}
						if = {
							limit = {
								is_controlled_by = ROOT
							}
							set_temp_variable = { red = 0.0 }
							set_temp_variable = { green = 0.5 }
							set_temp_variable = { blue = 0.0 }
						}
						else_if = {
							limit = {
								is_owned_by = ROOT
							}
							set_temp_variable = { red = 0.7 }
							set_temp_variable = { green = 0.0 }
							set_temp_variable = { blue = 0.0 }
						}
						else = {
							set_temp_variable = { red = 0.67 }
							set_temp_variable = { green = 1.0 }
							set_temp_variable = { blue = 0.67 }
							set_temp_variable = { alpha = 0.5 }
						}
					}
					else_if = {
						limit = {
							is_owned_by = ROOT
						}
						if = {
							limit = {
								is_controlled_by = ROOT
							}
							set_temp_variable = { red = 0.0 }
							set_temp_variable = { green = 1.0 }
							set_temp_variable = { blue = 0.0 }
						}
						else = {
							set_temp_variable = { red = 1.0 }
							set_temp_variable = { green = 0.0 }
							set_temp_variable = { blue = 0.0 }
						}
					}
					else_if = {
						limit = {
							is_claimed_by = ROOT
						}
						if = {
							limit = {
								is_controlled_by = ROOT
							}
							set_temp_variable = { red = 0.0 }
							set_temp_variable = { green = 0.67 }
							set_temp_variable = { blue = 1.0 }
						}
						else = {
							set_temp_variable = { red = 1.0 }
							set_temp_variable = { green = 0.67 }
							set_temp_variable = { blue = 1.0 }
							set_temp_variable = { alpha = 0.5 }
						}
					}
					else = {
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 1.0 }
						set_temp_variable = { blue = 0.0 }
					}
				}
			}

			thickness = no

			targets = {
			#	target_array = core_states
			#	target_array = owned_states
			#	target_array = controlled_states
				target_array = global.states
				target_trigger = {
					FROM = {
						OR = {
							is_owned_by = ROOT
							is_controlled_by = ROOT
							is_core_of = ROOT
							is_claimed_by = ROOT
						}
					}
				}
			}
		}

		bottom = {
			type = country

			color = {
				set_temp_variable = { alpha = 0.4 }
				set_temp_variable = { thickness = 10.0 }
				set_temp_variable = { red = 0.0 }
				set_temp_variable = { green = 0.0 }
				set_temp_variable = { blue = 0.0 }
			}

			thickness = yes

			targets = {
				targets = { ROOT }
			}
		}

		far_text = country
		near_text = state

		update_daily = no
	}

	more_mapmodes_caused_world_tension_map_mode = {
		top = {
			type = country

			color = {
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					set_temp_variable = { temp = has_added_tension_amount }
					divide_temp_variable = { temp = 100 }
					subtract_from_temp_variable = { temp = 1 }
					multiply_temp_variable = { temp = -1 }
					clamp_temp_variable = {
						var = temp
						min = 0
						max = 1
					}
					set_temp_variable = { red = 1.0 }
					set_temp_variable = { green = temp }
					set_temp_variable = { blue = temp }
				}
			}

			thickness = no
		}

		bottom = {
			type = country

			color = {
				set_temp_variable = { alpha = 0.2 }
				set_temp_variable = { thickness = 1.0 }
				set_temp_variable = { red = 0.33 }
				set_temp_variable = { green = 0.33 }
				set_temp_variable = { blue = 0.33 }
			}

			thickness = yes
		}

		far_text = country
		near_text = state

		update_daily = yes
	}

	more_mapmodes_stability_map_mode = {
		top = {
			type = country

			color = {
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					set_temp_variable = { thickness = 1.0 }
					if = {
						limit = {
							has_stability > 0.99
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.5 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							has_stability > 0.74
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 1.0 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							has_stability > 0.49
						}
						set_temp_variable = { red = 0.9 }
						set_temp_variable = { green = 0.9 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							has_stability > 0.32
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.59 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							has_stability > 0.24
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.31 }
						set_temp_variable = { blue = 0.0 }
					}
					else = {
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.0 }
						set_temp_variable = { blue = 0.0 }
					}
				}
			}

			thickness = yes
		}

		bottom = {
			type = none
		}

		far_text = country
		near_text = state

		update_daily = yes
	}

	more_mapmodes_war_support_map_mode = {
		top = {
			type = country

			color = {
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					set_temp_variable = { thickness = 1.0 }
					if = {
						limit = {
							has_war_support > 0.99
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.5 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							has_war_support > 0.74
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 1.0 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							has_war_support > 0.49
						}
						set_temp_variable = { red = 0.9 }
						set_temp_variable = { green = 0.9 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							has_war_support > 0.32
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.59 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							has_war_support > 0.24
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.31 }
						set_temp_variable = { blue = 0.0 }
					}
					else = {
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.0 }
						set_temp_variable = { blue = 0.0 }
					}
				}
			}

			thickness = yes
		}

		bottom = {
			type = none
		}

		far_text = country
		near_text = state

		update_daily = yes
	}

	more_mapmodes_war_goals_map_mode = {
		top = {
			type = country

			color = {
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					set_temp_variable = { thickness = 1.0 }
					if = {
						limit = {
							tag = ROOT
						}
						set_temp_variable = { red = 0.08 }
						set_temp_variable = { green = 0.8 }
						set_temp_variable = { blue = 0.17 }
					}
					else_if = {
						limit = {
							has_wargoal_against = ROOT
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.0 }
						set_temp_variable = { blue = 0.0 }
					}
					else = {
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.5 }
						set_temp_variable = { blue = 0.0 }
					}
				}
			}

			thickness = yes

			targets = {
				target_array = global.countries
				target_trigger = {
					FROM = {
						OR = {
							tag = ROOT
							has_wargoal_against = ROOT
							is_justifying_wargoal_against = ROOT
						}
					}
				}
			}
		}

		bottom = {
			type = country

			color = {
				set_temp_variable = { alpha = 0.2 }
				set_temp_variable = { thickness = 1.0 }
				set_temp_variable = { red = 0.33 }
				set_temp_variable = { green = 0.33 }
				set_temp_variable = { blue = 0.33 }
			}

			thickness = yes

			targets = {
				target_array = global.countries
				target_trigger = {
					FROM = {
						OR = {
							tag = ROOT
							has_wargoal_against = ROOT
							is_justifying_wargoal_against = ROOT
						}
					}
				}
			}
		}

		far_text = country
		near_text = state

		update_daily = yes
	}

	more_mapmodes_anti_air_map_mode = {
		top = {
			type = state

			color = {
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					if = {
						limit = {
							anti_air_building > 4
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.5 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							anti_air_building > 3
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 1.0 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							anti_air_building > 2
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 1.0 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							anti_air_building > 1
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.59 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							anti_air_building > 0
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.31 }
						set_temp_variable = { blue = 0.0 }
					}
					else = {
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.0 }
						set_temp_variable = { blue = 0.0 }
					}
				}
			}

			thickness = no

			targets = {
				target_array = global.states
				target_trigger = {
					FROM = {
						OR = {
							is_controlled_by = ROOT
							CONTROLLER = {
								OR = {
									has_war_with = ROOT
									is_ally_with = ROOT
								}
							}
						}
					}
				}
			}
		}

		bottom = {
			type = country

			color = {
				set_temp_variable = { alpha = 0.25 }
				set_temp_variable = { thickness = 10.0 }
				set_temp_variable = { red = 0.0 }
				set_temp_variable = { green = 0.0 }
				set_temp_variable = { blue = 0.0 }
			}

			thickness = yes

			targets = {
				targets = { ROOT }
				target_array = allies
				target_array = enemies
			}
		}

		far_text = country
		near_text = state

		update_daily = yes
	}

	more_mapmodes_air_base_map_mode = {
		top = {
			type = state

			color = {
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					if = {
						limit = {
							air_base > 8
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.5 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							air_base > 6
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 1.0 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							air_base > 4
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 1.0 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							air_base > 2
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.59 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							air_base > 0
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.31 }
						set_temp_variable = { blue = 0.0 }
					}
					else = {
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.0 }
						set_temp_variable = { blue = 0.0 }
					}
				}
			}

			thickness = no

			targets = {
				target_array = global.states
				target_trigger = {
					FROM = {
						OR = {
							is_controlled_by = ROOT
							CONTROLLER = {
								OR = {
									has_war_with = ROOT
									is_ally_with = ROOT
								}
							}
						}
					}
				}
			}
		}

		bottom = {
			type = country

			color = {
				set_temp_variable = { alpha = 0.25 }
				set_temp_variable = { thickness = 10.0 }
				set_temp_variable = { red = 0.0 }
				set_temp_variable = { green = 0.0 }
				set_temp_variable = { blue = 0.0 }
			}

			thickness = yes

			targets = {
				targets = { ROOT }
				target_array = allies
				target_array = enemies
			}
		}

		far_text = country
		near_text = state

		update_daily = yes
	}

	more_mapmodes_technologies_map_mode = {
		top = {
			type = country

			color = {
				any_country = {
					all_other_country = {
						NOT = { check_variable = { num_researched_technologies > PREV.num_researched_technologies } }
					}
					set_temp_variable = { num_max_tech = num_researched_technologies }
				}
				set_temp_variable = { num_max_tech_minus_1 = num_max_tech }
				multiply_temp_variable = { num_max_tech_minus_1 = 0.9 }
				round_temp_variable = num_max_tech_minus_1
				set_temp_variable = { num_max_tech_minus_2 = num_max_tech }
				multiply_temp_variable = { num_max_tech_minus_2 = 0.8 }
				round_temp_variable = num_max_tech_minus_2
				set_temp_variable = { num_max_tech_minus_3 = num_max_tech }
				multiply_temp_variable = { num_max_tech_minus_3 = 0.7 }
				round_temp_variable = num_max_tech_minus_3
				set_temp_variable = { num_max_tech_minus_4 = num_max_tech }
				multiply_temp_variable = { num_max_tech_minus_4 = 0.6 }
				round_temp_variable = num_max_tech_minus_4
				set_temp_variable = { num_max_tech_minus_5 = num_max_tech }
				multiply_temp_variable = { num_max_tech_minus_5 = 0.5 }
				round_temp_variable = num_max_tech_minus_5
				set_temp_variable = { num_max_tech_minus_6 = num_max_tech }
				multiply_temp_variable = { num_max_tech_minus_6 = 0.4 }
				round_temp_variable = num_max_tech_minus_6
				set_temp_variable = { num_max_tech_minus_7 = num_max_tech }
				multiply_temp_variable = { num_max_tech_minus_7 = 0.3 }
				round_temp_variable = num_max_tech_minus_7
				set_temp_variable = { num_max_tech_minus_8 = num_max_tech }
				multiply_temp_variable = { num_max_tech_minus_8 = 0.2 }
				round_temp_variable = num_max_tech_minus_8
				set_temp_variable = { num_max_tech_minus_9 = num_max_tech }
				multiply_temp_variable = { num_max_tech_minus_9 = 0.1 }
				round_temp_variable = num_max_tech_minus_9
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					set_temp_variable = { thickness = 1.0 }
					if = {
						limit = {
							check_variable = { num_researched_technologies = num_max_tech }
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.5 }
						set_temp_variable = { blue = 0.0 }
						if = {
							limit = {
								all_other_country = {
									check_variable = { num_researched_technologies < PREV.num_researched_technologies }
								}
							}
							set_temp_variable = { highlighted = 1.0 }
						}
					}
					else_if = {
						limit = {
							NOT = { check_variable = { num_researched_technologies < num_max_tech_minus_1 } }
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.75 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							NOT = { check_variable = { num_researched_technologies < num_max_tech_minus_2 } }
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 1.0 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							NOT = { check_variable = { num_researched_technologies < num_max_tech_minus_3 } }
						}
						set_temp_variable = { red = 0.5 }
						set_temp_variable = { green = 1.0 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							NOT = { check_variable = { num_researched_technologies < num_max_tech_minus_4 } }
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 1.0 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							NOT = { check_variable = { num_researched_technologies < num_max_tech_minus_5 } }
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.8 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							NOT = { check_variable = { num_researched_technologies < num_max_tech_minus_6 } }
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.6 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							NOT = { check_variable = { num_researched_technologies < num_max_tech_minus_7 } }
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.4 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							NOT = { check_variable = { num_researched_technologies < num_max_tech_minus_8 } }
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.25 }
						set_temp_variable = { blue = 0.0 }
					}
					else_if = {
						limit = {
							NOT = { check_variable = { num_researched_technologies < num_max_tech_minus_9 } }
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.1 }
						set_temp_variable = { blue = 0.0 }
					}
					else = {
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.0 }
						set_temp_variable = { blue = 0.0 }
					}
				}
			}

			thickness = yes
		}

		bottom = {
			type = none
		}

		far_text = country
		near_text = state

		update_daily = yes
	}

	more_mapmodes_intervention_map_mode = {
		top = {
			type = country

			color = {
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					set_temp_variable = { thickness = 1.0 }
					if = {
						limit = {
							tag = ROOT
						}
						set_temp_variable = { red = 0.08 }
						set_temp_variable = { green = 0.8 }
						set_temp_variable = { blue = 0.17 }
					}
					else_if = {
						limit = {
							received_expeditionary_forces = {
								sender = ROOT
								value > 0
							}
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.5 }
						set_temp_variable = { blue = 1.0 }
					}
					else_if = {
						limit = {
							ROOT = {
								received_expeditionary_forces = {
									sender = PREV
									value > 0
								}
							}
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.2 }
						set_temp_variable = { blue = 0.8 }
					}
					else_if = {
						limit = {
							OR = {
								has_volunteers_amount_from = {
									tag = ROOT
									count > 0
								}
								ROOT = {
									has_volunteers_amount_from = {
										tag = PREV
										count > 0
									}
								}
							}
						}
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.9 }
						set_temp_variable = { blue = 1.0 }
					}
				}
			}

			targets = {
				target_array = global.countries
				target_trigger = {
					FROM = {
						OR = {
							tag = ROOT
							received_expeditionary_forces = {
								sender = ROOT
								value > 0
							}
							ROOT = {
								received_expeditionary_forces = {
									sender = PREV
									value > 0
								}
							}
							has_volunteers_amount_from = {
								tag = ROOT
								count > 0
							}
							ROOT = {
								has_volunteers_amount_from = {
									tag = PREV
									count > 0
								}
							}
						}
					}
				}
			}

			thickness = yes
		}

		bottom = {
			type = country

			color = {
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					set_temp_variable = { thickness = 10.0 }
					set_temp_variable = { red = 0.0 }
					set_temp_variable = { green = 0.0 }
					set_temp_variable = { blue = 1.0 }
				}
			}

			targets = {
				target_array = allies
				target_trigger = {
					received_expeditionary_forces = {
						sender = FROM
						value > 0
					}
				}
			}

			thickness = yes
		}

		far_text = country
		near_text = state

		update_daily = yes
	}

	more_mapmodes_blackout_map_mode = {
		top = {
			type = state

			color = {
				FROM = {
					set_temp_variable = { alpha = 1.0 }
					set_temp_variable = { thickness = 1.0 }
					if = {
						limit = {
							has_dynamic_modifier = {
								modifier = energy_global_blackout
							}
						}
						set_temp_variable = { red = 0.9 }
						set_temp_variable = { green = 0.9 }
						set_temp_variable = { blue = 0.0 }
					} else_if = {
						limit = {
							has_dynamic_modifier = {
								modifier = energy_local_blackout
							}
						}
						set_temp_variable = { red = 1.0 }
						set_temp_variable = { green = 0.0 }
						set_temp_variable = { blue = 0.0 }
					} else = {
						set_temp_variable = { red = 0.0 }
						set_temp_variable = { green = 0.8 }
						set_temp_variable = { blue = 0.2 }
					}
				}
			}

			thickness = yes
		}

		bottom = {
			type = none
		}

		far_text = country
		near_text = state

		update_daily = yes
	}

}