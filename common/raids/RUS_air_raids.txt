types = {
	#удары ракетами по авиабазам
	rus_strikes_on_airfield_rc = {
		days_to_prepare = 1 #2
		days_re_enable = 90
		category = critical_military_infrastructure_strikes
		command_power = 0 # command power allocation cost
		ai_will_do = {
			base = 1
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = RUS
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				OR = { air_base > 0 }
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = air_base
			}
		}
		#target_icon = GFX_canal_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { strategic_bomber }
				amount = { min = 2 max = 4 }
			}
		}
	
		additional_equipment = {
			rus_medium_guided_missile_equipment = 6
		}
	
		starting_point = {
			types = { air_base }
		}
	
		success_factors = {
			success = {
				base = 0.80
			}
			disaster = {
				base = 0.01
			}
			critical = {
				base = 0.10
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
		}
	}

	#балистикой по авиабазам
	rus_strikes_on_airfield_bl = {
		days_to_prepare = 1 #2
		days_re_enable = 90
		category = critical_military_infrastructure_strikes
		command_power = 0 # command power allocation cost
		ai_will_do = {
			base = 1
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = RUS
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				OR = { air_base > 0 }
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = air_base
			}
		}
		#target_icon = GFX_canal_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { rus_ballistic_missile_equipment }
				amount = { min = 12 }
			}
		}
	
		additional_equipment = {
			rus_ballistic_missile_equipment = 4
		}
	
		starting_point = {
			types = { rocket_site }
		}
	
		success_factors = {
			success = {
				base = 0.80
			}
			disaster = {
				base = 0.01
			}
			critical = {
				base = 0.10
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
		}
	}

	#шахеды по авиабазам
	rus_strikes_on_airfield_drones = {
		days_to_prepare = 1 #2
		days_re_enable = 90
		category = critical_military_infrastructure_strikes
		command_power = 0 # command power allocation cost
		ai_will_do = {
			base = 1
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = RUS
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				OR = { air_base > 0 }
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = air_base
			}
		}
		#target_icon = GFX_canal_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { rus_guided_uav_equipment }
				amount = { min = 12 }
			}
		}
	
		additional_equipment = {
			rus_guided_uav_equipment = 24
		}
	
		starting_point = {
			types = { rocket_site }
		}
	
		success_factors = {
			success = {
				base = 0.80
			}
			disaster = {
				base = 0.01
			}
			critical = {
				base = 0.10
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
		}
	}

	#удары по подстанциям
	rus_strikes_on_airfield_drones = {
		days_to_prepare = 1 #2
		days_re_enable = 90
		category = critical_military_infrastructure_strikes
		command_power = 0 # command power allocation cost
		ai_will_do = {
			base = 1
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = RUS
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				OR = {
					electrical_substation_big > 0
					electrical_substation > 03
				}
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = electrical_substation
			}
			building = {
				type = electrical_substation_big
			}
		}
		#target_icon = GFX_canal_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { strat_bomber }
				amount = { min = 1 }
			}
		}
	
		additional_equipment = {
			rus_medium_guided_missile_equipment = 12
		}
	
		starting_point = {
			types = { air_base }
		}
	
		success_factors = {
			success = {
				base = 0.80
			}
			disaster = {
				base = 0.01
			}
			critical = {
				base = 0.10
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.el_sub_big = THIS.non_damaged_building_level@electrical_substation_big }
						set_temp_variable = { ROOT.el_sub = THIS.non_damaged_building_level@electrical_substation }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.el_sub_big = THIS.non_damaged_building_level@electrical_substation_big }
						set_temp_variable = { ROOT.el_sub = THIS.non_damaged_building_level@electrical_substation }
						set_temp_variable = { ROOT.el_sub_big_tgt = THIS.building_level@electrical_substation_big }
						set_temp_variable = { ROOT.el_sub_tgt = THIS.building_level@electrical_substation }
					}
	
					add_to_temp_variable = { el_sub = 0.5 }
					multiply_temp_variable = { el_sub_big = el_sub }
					if = {
						limit = {
							NOT = { check_variable = { el_sub_big = 0 } }
						}
						multiply_temp_variable = { el_sub_big = el_sub }
					}
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
					if = {
						limit = {
							check_variable = { el_sub_big_tgt > 0 }
						}
						add_to_temp_variable = { damage_split = 0.1 }
					}
					if = {
						limit = {
							check_variable = { el_sub_tgt > 0 }
						}
						add_to_temp_variable = { damage_split = 0.1 }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = el_sub_tgt }
					add_to_temp_variable = { max_clamp = el_sub_big_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { electrical_substation_big > 0 }
							meta_effect = {
								text = {
									damage_building = {
										type = electrical_substation_big
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
						if = { limit = { electrical_substation > 0 }
							meta_effect = {
								text = {
									damage_building = {
										type = electrical_substation
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
		}
	}
}