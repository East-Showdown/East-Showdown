types = {
	#удары по топляку
	#для е300 ентерпрайз
	ukr_synthetic_refinery_strike_drones_e300 = {
		days_to_prepare = 1 #2
		days_re_enable = 15
		category = on_oil_refinery_strikes
		command_power = 3 # command power allocation cost
		# Настройка для ракетных ударов
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2023.1.1
			}
			modifier = {
				factor = 0.2
				date < 2023.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				synthetic_refinery > 0
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = synthetic_refinery
			}
		}
		target_icon = GFX_oilfield_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { ukr_guided_uav_equipment }
				amount = { min = 12 }
			}
		}
	
		additional_equipment = {
			ukr_guided_uav_equipment = 24
		}
	
		starting_point = {
			types = { rocket_site }
		}
	
		success_factors = {
			success = {
				base = 0.80
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.syntheticRefinery = THIS.non_damaged_building_level@synthetic_refinery }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.syntheticRefinery = THIS.non_damaged_building_level@synthetic_refinery }
						set_temp_variable = { ROOT.syntheticRefinery_tgt = THIS.building_level@synthetic_refinery }
					}
	
					add_to_temp_variable = { syntheticRefinery = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { syntheticRefinery > 0 } }
						divide_temp_variable = { building_damage_by_missile = syntheticRefinery }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = syntheticRefinery_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { syntheticRefinery_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = synthetic_refinery
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.syntheticRefinery = THIS.non_damaged_building_level@synthetic_refinery }
						set_temp_variable = { ROOT.syntheticRefinery_tgt = THIS.building_level@synthetic_refinery }
					}
	
					add_to_temp_variable = { syntheticRefinery = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { syntheticRefinery > 0 } }
						divide_temp_variable = { building_damage_by_missile = syntheticRefinery }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = syntheticRefinery_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { syntheticRefinery_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = synthetic_refinery
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.syntheticRefinery = THIS.non_damaged_building_level@synthetic_refinery }
						set_temp_variable = { ROOT.syntheticRefinery_tgt = THIS.building_level@synthetic_refinery }
					}

					add_to_temp_variable = { syntheticRefinery = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }

					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { syntheticRefinery > 0 } }
						divide_temp_variable = { building_damage_by_missile = syntheticRefinery }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = syntheticRefinery_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { syntheticRefinery_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = synthetic_refinery
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
			}
		}
	} 
	#для паланиці
	ukr_synthetic_refinery_strike_drones_pal = {
		days_to_prepare = 1 #2
		days_re_enable = 15
		category = on_oil_refinery_strikes
		command_power = 3 # command power allocation cost
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2023.1.1
			}
			modifier = {
				factor = 0.2
				date < 2023.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				synthetic_refinery > 0
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = synthetic_refinery
			}
		}
		target_icon = GFX_oilfield_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { ukr_drone_missile_equipment }
				amount = { min = 12 }
			}
		}
	
		additional_equipment = {
			ukr_drone_missile_equipment = 24
		}
	
		starting_point = {
			types = { rocket_site }
		}
	
		success_factors = {
			success = {
				base = 0.80
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.syntheticRefinery = THIS.non_damaged_building_level@synthetic_refinery }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.syntheticRefinery = THIS.non_damaged_building_level@synthetic_refinery }
						set_temp_variable = { ROOT.syntheticRefinery_tgt = THIS.building_level@synthetic_refinery }
					}
	
					add_to_temp_variable = { syntheticRefinery = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { syntheticRefinery > 0 } }
						divide_temp_variable = { building_damage_by_missile = syntheticRefinery }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = syntheticRefinery_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { syntheticRefinery_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = synthetic_refinery
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.syntheticRefinery = THIS.non_damaged_building_level@synthetic_refinery }
						set_temp_variable = { ROOT.syntheticRefinery_tgt = THIS.building_level@synthetic_refinery }
					}
	
					add_to_temp_variable = { syntheticRefinery = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { syntheticRefinery > 0 } }
						divide_temp_variable = { building_damage_by_missile = syntheticRefinery }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = syntheticRefinery_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { syntheticRefinery_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = synthetic_refinery
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.syntheticRefinery = THIS.non_damaged_building_level@synthetic_refinery }
						set_temp_variable = { ROOT.syntheticRefinery_tgt = THIS.building_level@synthetic_refinery }
					}

					add_to_temp_variable = { syntheticRefinery = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }

					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { syntheticRefinery > 0 } }
						divide_temp_variable = { building_damage_by_missile = syntheticRefinery }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = syntheticRefinery_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { syntheticRefinery_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = synthetic_refinery
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
			}
		}
	}
	

	#удары по военке и все балистикой и ракетами западными не западными
	#удары по военной промышленности ракетами
	ukr_arms_industry_strike_rc = {
		days_to_prepare = 1 #2
		days_re_enable = 30
		category = critical_military_infrastructure_strikes
		command_power = 3 # command power allocation cost
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2023.1.1
			}
			modifier = {
				factor = 0.2
				date < 2023.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				OR = { arms_factory > 0 }
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = arms_factory
			}
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { cas }
				amount = { min = 2 }
			}
		}
	
		additional_equipment = {
			ukr_light_guided_missile_equipment = 12
		}
	
		starting_point = {
			types = { air_base }
		}
	
		success_factors = {
			success = {
				base = 0.80
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.armsFactory = THIS.non_damaged_building_level@arms_factory }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.armsFactory = THIS.non_damaged_building_level@arms_factory }
						set_temp_variable = { ROOT.armsFactory_tgt = THIS.building_level@arms_factory }
					}
	
					add_to_temp_variable = { armsFactory = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { armsFactory > 0 } }
						divide_temp_variable = { building_damage_by_missile = armsFactory }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = armsFactory_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { armsFactory_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = arms_factory
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.armsFactory = THIS.non_damaged_building_level@arms_factory }
						set_temp_variable = { ROOT.armsFactory_tgt = THIS.building_level@arms_factory }
					}
	
					add_to_temp_variable = { armsFactory = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { armsFactory > 0 } }
						divide_temp_variable = { building_damage_by_missile = armsFactory }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = armsFactory_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { armsFactory_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = arms_factory
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.armsFactory = THIS.non_damaged_building_level@arms_factory }
						set_temp_variable = { ROOT.armsFactory_tgt = THIS.building_level@arms_factory }
					}

					add_to_temp_variable = { armsFactory = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }

					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = armsFactory }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = armsFactory_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { armsFactory_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = arms_factory
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
			}
		}
	}
	ukr_arms_industry_strike_bl = {
		days_to_prepare = 1 #2
		days_re_enable = 180
		category = critical_military_infrastructure_strikes
		command_power = 3 # command power allocation cost
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2023.1.1
			}
			modifier = {
				factor = 0.2
				date < 2023.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				OR = { arms_factory > 0 }
			}
		}

		available = {
			has_war_with = FROM
		}

		target_type = {
			building = {
				type = arms_factory
			}
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air

		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}

		unit_requirements = {
			equipment = {
				type = { ukr_ballistic_missile_equipment }
				amount = { min = 12 }
			}
		}

		additional_equipment = {
			ukr_ballistic_missile_equipment = 6
		}

		starting_point = {
			types = { rocket_site }
		}

		success_factors = {
			success = {
				base = 0.90
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}

		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.armsFactory = THIS.non_damaged_building_level@arms_factory }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}

			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.armsFactory = THIS.non_damaged_building_level@arms_factory }
						set_temp_variable = { ROOT.armsFactory_tgt = THIS.building_level@arms_factory }
					}

					add_to_temp_variable = { armsFactory = 0.5 }

					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { armsFactory > 0 } }
						divide_temp_variable = { building_damage_by_missile = armsFactory }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = armsFactory_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { armsFactory_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = arms_factory
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}

			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.armsFactory = THIS.non_damaged_building_level@arms_factory }
						set_temp_variable = { ROOT.armsFactory_tgt = THIS.building_level@arms_factory }
					}

					add_to_temp_variable = { armsFactory = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }

					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { armsFactory > 0 } }
						divide_temp_variable = { building_damage_by_missile = armsFactory }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = armsFactory_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { armsFactory_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = arms_factory
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.armsFactory = THIS.non_damaged_building_level@arms_factory }
						set_temp_variable = { ROOT.armsFactory_tgt = THIS.building_level@arms_factory }
					}

					add_to_temp_variable = { armsFactory = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }

					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = armsFactory }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = armsFactory_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { armsFactory_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = arms_factory
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
			}
		}
	}



	#удары по производству снарядов
	ukr_ammunition_plant_strike_rc = {
		days_to_prepare = 1 #2
		days_re_enable = 30
		category = critical_military_infrastructure_strikes
		command_power = 3 # command power allocation cost
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2023.1.1
			}
			modifier = {
				factor = 0.2
				date < 2023.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				ammunition_plant > 0
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = ammunition_plant
			}
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { cas }
				amount = { min = 2 }
			}
		}
	
		additional_equipment = {
			ukr_light_guided_missile_equipment = 12
		}
	
		starting_point = {
			types = { air_base }
		}
	
		success_factors = {
			success = {
				base = 0.80
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionPlant = THIS.non_damaged_building_level@ammunition_plant }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionPlant = THIS.non_damaged_building_level@ammunition_plant }
						set_temp_variable = { ROOT.ammunitionPlant_tgt = THIS.building_level@ammunition_plant }
					}
	
					add_to_temp_variable = { ammunitionPlant = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { ammunitionPlant > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionPlant }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = ammunitionPlant_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { ammunitionPlant_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = ammunition_plant
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionPlant = THIS.non_damaged_building_level@ammunition_plant }
						set_temp_variable = { ROOT.ammunitionPlant_tgt = THIS.building_level@ammunition_plant }
					}
	
					add_to_temp_variable = { ammunitionPlant = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { ammunitionPlant > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionPlant }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = ammunitionPlant_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { ammunitionPlant_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = ammunition_plant
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionPlant = THIS.non_damaged_building_level@ammunition_plant }
						set_temp_variable = { ROOT.ammunitionPlant_tgt = THIS.building_level@ammunition_plant }
					}

					add_to_temp_variable = { ammunitionPlant = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }

					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { ammunitionPlant > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionPlant }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = ammunitionPlant_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { ammunitionPlant_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = ammunition_plant
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
			}
		}
	}

	ukr_ammunition_plant_strike_bl = {
		days_to_prepare = 1 #2
		days_re_enable = 180
		category = critical_military_infrastructure_strikes
		command_power = 3 # command power allocation cost
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2023.1.1
			}
			modifier = {
				factor = 0.2
				date < 2023.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				OR = { ammunition_plant > 0 }
			}
		}

		available = {
			has_war_with = FROM
		}

		target_type = {
			building = {
				type = ammunition_plant
			}
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air

		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}

		unit_requirements = {
			equipment = {
				type = { ukr_ballistic_missile_equipment }
				amount = { min = 12 }
			}
		}

		additional_equipment = {
			ukr_ballistic_missile_equipment = 8
		}

		starting_point = {
			types = { rocket_site }
		}

		success_factors = {
			success = {
				base = 0.95
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}

		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionPlant = THIS.non_damaged_building_level@ammunition_plant }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}

			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionPlant = THIS.non_damaged_building_level@ammunition_plant }
						set_temp_variable = { ROOT.ammunitionPlant_tgt = THIS.building_level@ammunition_plant }						
					}

					add_to_temp_variable = { ammunitionPlant = 0.5 }

					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { ammunitionPlant > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionPlant }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = ammunitionPlant_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { ammunitionPlant_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = ammunition_plant
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}

			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionPlant = THIS.non_damaged_building_level@ammunition_plant }
						set_temp_variable = { ROOT.ammunitionPlant_tgt = THIS.building_level@ammunition_plant }						
					}

					add_to_temp_variable = { ammunitionPlant = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }

					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { ammunitionPlant > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionPlant }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = ammunitionPlant_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { ammunitionPlant_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = ammunition_plant
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionPlant = THIS.non_damaged_building_level@ammunition_plant }
						set_temp_variable = { ROOT.ammunitionPlant_tgt = THIS.building_level@ammunition_plant }						
					}

					add_to_temp_variable = { ammunitionPlant = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }

					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { ammunitionPlant_tgt > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionPlant }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = ammunitionPlant_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { ammunitionPlant_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = arms_factory
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
			}
		}
	}


	
	#удары по складам 
	ukr_ammunition_silo_strike_rc = {
		days_to_prepare = 1 #2
		days_re_enable = 30
		category = critical_military_infrastructure_strikes
		command_power = 3 # command power allocation cost
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2023.1.1
			}
			modifier = {
				factor = 0.2
				date < 2023.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				ammunition_silo > 0
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = ammunition_silo
			}
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { cas }
				amount = { min = 2 }
			}
		}
	
		additional_equipment = {
			ukr_light_guided_missile_equipment = 12
		}
	
		starting_point = {
			types = { air_base }
		}
	
		success_factors = {
			success = {
				base = 0.80
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionSilo = THIS.non_damaged_building_level@ammunition_silo }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionSilo = THIS.non_damaged_building_level@ammunition_silo }
						set_temp_variable = { ROOT.ammunitionSilo_tgt = THIS.building_level@ammunition_silo }
					}
	
					add_to_temp_variable = { ammunitionSilo = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}

					set_temp_variable_to_random = {
						var = ammunition_destroyed_rnd
						min = 38.5
						max = 153.84
					}

					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { ammunitionSilo > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionSilo }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = ammunitionSilo_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { ammunitionSilo_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										#type = ammunition_silo
										#damage = [DAM] # levels of damage
										#ammunition_variable = -AMMO
									}
								}
								#DAM = "[?building_damage_by_missile]"
								#AMM0 = ammunition_destroyed_rnd
							}
						}
						ammunition_variable = -ammunition_destroyed_rnd
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionSilo = THIS.non_damaged_building_level@ammunition_silo }
						set_temp_variable = { ROOT.ammunitionSilo_tgt = THIS.building_level@ammunition_silo }
					}
	
					add_to_temp_variable = { ammunitionSilo = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}

					set_temp_variable_to_random = {
						var = ammunition_destroyed_rnd
						min = 153.84
						max = 307.7
					}

					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { ammunitionSilo > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionSilo }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = ammunitionSilo_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { ammunitionSilo_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										#type = ammunition_silo
										#damage = [DAM] # levels of damage
										#ammunition_variable = -AMMO
									}
								}
								#DAM = "[?building_damage_by_missile]"
								#AMM0 = ammunition_destroyed_rnd
							}
						}
						ammunition_variable = -ammunition_destroyed_rnd
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionSilo = THIS.non_damaged_building_level@ammunition_silo }
						set_temp_variable = { ROOT.ammunitionSilo_tgt = THIS.building_level@ammunition_silo }
					}

					add_to_temp_variable = { ammunitionSilo = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }

					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}

					set_temp_variable_to_random = {
						var = ammunition_destroyed_rnd
						min = 307.7
						max = 384.62
					}

					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { ammunitionSilo > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionSilo }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = ammunitionSilo_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { ammunitionSilo_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										#type = ammunition_silo
										#damage = [DAM] # levels of damage
										#ammunition_variable = -AMMO
									}
								}
								#DAM = "[?building_damage_by_missile]"
								#AMM0 = ammunition_destroyed_rnd
								
							}
						}
						ammunition_variable = -ammunition_destroyed_rnd
					}
				}
			}
		}
	}
	ukr_ammunition_silo_strike_bl = {
		days_to_prepare = 1 #2
		days_re_enable = 90
		category = critical_military_infrastructure_strikes
		command_power = 3 # command power allocation cost
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2023.1.1
			}
			modifier = {
				factor = 0.2
				date < 2023.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				ammunition_silo > 0
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = ammunition_silo
			}
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { ukr_ballistic_missile_equipment }
				amount = { min = 12 }
			}
		}
	
		additional_equipment = {
			ukr_ballistic_missile_equipment = 8
		}
	
		starting_point = {
			types = { rocket_site }
		}
	
		success_factors = {
			success = {
				base = 0.80
			}
			disaster = {
				base = 0.01
			}
			critical = {
				base = 0.10
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionSilo = THIS.non_damaged_building_level@ammunition_silo }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionSilo = THIS.non_damaged_building_level@ammunition_silo }
						set_temp_variable = { ROOT.ammunitionSilo_tgt = THIS.building_level@ammunition_silo }
					}
	
					add_to_temp_variable = { ammunitionSilo = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { ammunitionSilo > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionSilo }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = ammunitionSilo_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { ammunitionSilo_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = ammunition_silo
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionSilo = THIS.non_damaged_building_level@ammunition_silo }
						set_temp_variable = { ROOT.ammunitionSilo_tgt = THIS.building_level@ammunition_silo }
					}
	
					add_to_temp_variable = { ammunitionSilo = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { ammunitionSilo > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionSilo }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = ammunitionSilo_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { ammunitionSilo_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = ammunition_silo
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.ammunitionSilo = THIS.non_damaged_building_level@ammunition_silo }
						set_temp_variable = { ROOT.ammunitionSilo_tgt = THIS.building_level@ammunition_silo }
					}

					add_to_temp_variable = { ammunitionSilo = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }

					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }

					if = {
						limit = { check_variable = { ammunitionSilo > 0 } }
						divide_temp_variable = { building_damage_by_missile = ammunitionSilo }
					}

					multiply_temp_variable = { building_damage_by_missile = 5 }

					set_temp_variable = { max_clamp = ammunitionSilo_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}

					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}

					var:target_state = {
						if = { limit = { check_variable = { ammunitionSilo_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = ammunition_silo
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
			}
		}
	}

	
	
	#удары по аэродромам
	ukr_strikes_on_airfield_bl = {
		days_to_prepare = 1 #2
		days_re_enable = 180
		category = on_airfield_infrastructure_strikes
		command_power = 3 # command power allocation cost
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2023.1.1
			}
			modifier = {
				factor = 0.2
				date < 2023.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				OR = { air_base > 0 }
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = air_base
			}
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { ukr_ballistic_missile_equipment }
				amount = { min = 12 }
			}
		}
	
		additional_equipment = {
			ukr_ballistic_missile_equipment = 4
		}
	
		starting_point = {
			types = { rocket_site }
		}
	
		success_factors = {
			success = {
				base = 0.90
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
		}
	}
	ukr_strikes_on_airfield_drones = {
		days_to_prepare = 1 #2
		days_re_enable = 90
		category = on_airfield_infrastructure_strikes
		command_power = 3 # command power allocation cost
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2023.1.1
			}
			modifier = {
				factor = 0.2
				date < 2023.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
			NOT = { is_in_faction_with = FROM }
			var:target_state = {
				OR = { air_base > 0 }
			}
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				type = air_base
			}
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { ukr_guided_uav_equipment }
				amount = { min = 12 }
			}
		}
	
		additional_equipment = {
			ukr_guided_uav_equipment = 24
		}
	
		starting_point = {
			types = { rocket_site }
		}
	
		success_factors = {
			success = {
				base = 0.60
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
	
					set_temp_variable = { building_damage_by_missile = 0.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
	
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.airBase = THIS.non_damaged_building_level@air_base }
						set_temp_variable = { ROOT.airBase_tgt = THIS.building_level@air_base }
					}
	
					add_to_temp_variable = { airBase = 0.5 }
					set_temp_variable = { building_damage_by_missile = 0.25 }
	
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
	
					if = {
						limit = { check_variable = { airBase > 0 } }
						divide_temp_variable = { building_damage_by_missile = airBase }
					}
	
					multiply_temp_variable = { building_damage_by_missile = 5 }
	
					set_temp_variable = { max_clamp = airBase_tgt }
					if = {
						limit = { check_variable = { max_clamp = 0 } }
						add_to_temp_variable = { max_clamp = 0.1 }
					}
	
					clamp_temp_variable = {
						var = building_damage_by_missile
						min = 0
						max = max_clamp
					}
					var:target_state = {
						if = { limit = { check_variable = { airBase_tgt > 0 } }
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [DAM] # levels of damage
									}
								}
								DAM = "[?building_damage_by_missile]"
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
		}
	}

	ukr_strikes_on_institute_rc = {
		days_to_prepare = 1 #2
		days_re_enable = 30
		category = on_institute_strikes
		command_power = 0 # command power allocation cost
		# Настройка для ракетных ударов
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2022.3.1
			}
			modifier = {
				factor = 0.2
				date < 2022.3.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				tags = facility
			}
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { cas }
				amount = { min = 2 }
			}
		}
	
		additional_equipment = {
			ukr_light_guided_missile_equipment = 12
		}
	
		starting_point = {
			types = { air_base }
		}
	
		success_factors = {
			success = {
				base = 0.80
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.facility = THIS.non_damaged_building_level@facility }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					set_temp_variable = { building_damage_by_missile = 1.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
					multiply_temp_variable = { building_damage_by_missile = 1 }
					clamp_temp_variable = {
						var = building_damage_by_missile
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = 0.5 }
					var:target_state = {
						meta_effect = {
							text = {
								damage_building = {
									tags = facility
									province = var:ROOT.target_province
									damage = [DAM] # levels of damage
								}
							}
							DAM = "[?building_damage_by_missile]"
						}
						raid_reduce_project_progress_ratio = 0.05
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					set_temp_variable = { building_damage_by_missile = 1.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
					multiply_temp_variable = { building_damage_by_missile = 1 }
					clamp_temp_variable = {
						var = building_damage_by_missile
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = 0.5 }
					var:target_state = {
						meta_effect = {
							text = {
								damage_building = {
									tags = facility
									province = var:ROOT.target_province
									damage = [DAM] # levels of damage
								}
							}
							DAM = "[?building_damage_by_missile]"
						}
						raid_reduce_project_progress_ratio = 0.1
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					set_temp_variable = { building_damage_by_missile = 1.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
					multiply_temp_variable = { building_damage_by_missile = 1 }
					clamp_temp_variable = {
						var = building_damage_by_missile
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = 0.5 }
					var:target_state = {
						meta_effect = {
							text = {
								damage_building = {
									tags = facility
									province = var:ROOT.target_province
									damage = [DAM] # levels of damage
								}
							}
							DAM = "[?building_damage_by_missile]"
						}
						raid_reduce_project_progress_ratio = 0.15
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
		}
	}

	ukr_institute_strike_drones = {
		days_to_prepare = 1 #2
		days_re_enable = 180
		category = on_institute_strikes
		command_power = 0 # command power allocation cost
		# Настройка для ракетных ударов
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2024.1.1
			}
			modifier = {
				factor = 0.2
				date < 2024.1.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {
		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			building = {
				tags = facility
			}
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { ukr_guided_uav_equipment }
				amount = { min = 12 }
			}
		}
	
		additional_equipment = {
			ukr_guided_uav_equipment = 8
		}
	
		starting_point = {
			types = { rocket_site }
		}
	
		success_factors = {
			success = {
				base = 0.60
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}
	
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						set_temp_variable = { ROOT.facility = THIS.non_damaged_building_level@facility }
					}
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					set_temp_variable = { building_damage_by_missile = 1.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.4
						max = 0.6
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
					multiply_temp_variable = { building_damage_by_missile = 1 }
					clamp_temp_variable = {
						var = building_damage_by_missile
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = 0.5 }
					var:target_state = {
						meta_effect = {
							text = {
								damage_building = {
									tags = facility
									province = var:ROOT.target_province
									damage = [DAM] # levels of damage
								}
							}
							DAM = "[?building_damage_by_missile]"
						}
						raid_reduce_project_progress_ratio = 0.05
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					set_temp_variable = { building_damage_by_missile = 1.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.6
						max = 0.8
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
					multiply_temp_variable = { building_damage_by_missile = 1 }
					clamp_temp_variable = {
						var = building_damage_by_missile
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = 0.5 }
					var:target_state = {
						meta_effect = {
							text = {
								damage_building = {
									tags = facility
									province = var:ROOT.target_province
									damage = [DAM] # levels of damage
								}
							}
							DAM = "[?building_damage_by_missile]"
						}
						raid_reduce_project_progress_ratio = 0.1
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					set_temp_variable = { building_damage_by_missile = 1.25 }
					set_temp_variable_to_random = {
						var = missile_luck_mod
						min = 0.8
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = missile_luck_mod }
					multiply_temp_variable = { building_damage_by_missile = 1 }
					clamp_temp_variable = {
						var = building_damage_by_missile
						max = 1
					}
					multiply_temp_variable = { building_damage_by_missile = 0.5 }
					var:target_state = {
						meta_effect = {
							text = {
								damage_building = {
									tags = facility
									province = var:ROOT.target_province
									damage = [DAM] # levels of damage
								}
							}
							DAM = "[?building_damage_by_missile]"
						}
						raid_reduce_project_progress_ratio = 0.15
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
		}
	}

	ukr_strikes_on_bridges_CRIMEA_STRAIT = {
		days_to_prepare = 1 #2
		days_re_enable = 365
		category = on_bridge_strikes
		command_power = 0 # command power allocation cost
		# Настройка для ракетных ударов
		ai_will_do = {
			base = 1.0
			modifier = {
				factor = 5.0
				date > 2022.3.1
			}
			modifier = {
				factor = 0.2
				date < 2022.3.1
			}
		}
		allowed = {
			has_dlc = "Gotterdammerung"
			original_tag = UKR
		}
		visible = { }
		
		show_target = {

		}
	
		available = {
			has_war_with = FROM
		}
	
		target_type = {
			province = 18842
		}
		target_icon = GFX_other_target_icon
		launch_sound = raid_launch_air
	
		arrow = {
			type = air
		}
		
		unit_model = {
			type = equipment
		}
	
		unit_requirements = {
			equipment = {
				type = { ukr_guided_uav_equipment }
				amount = { min = 2 }
			}
		}
	
		additional_equipment = {
			ukr_guided_uav_equipment = 100
		}
	
		starting_point = {
			types = { air_base }
		}
	
		success_factors = {
			success = {
				base = 0.60
				experience = {
					weight = 0.1
					start_weight = -0.1
					reference = 1.0
				}
				air_defence = {
					reference = 100
					weight = 0.06
					start_weight = -0.06
				}
				interception = {
					reference = 2
					weight = -0.2
				}
				anti_air = {
					reference = 6
					weight = -0.25
				}
			}
			disaster = {
				base = 0.20
			}
			critical = {
				base = 0.05
			}
		}
	
		success_levels = {
			failure = {
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
	
			limited_success = {
				victim_effects = {
					set_global_flag = {
						flag = CRIMEA_STRAIT_BLOCKED
						days = 14
						value = 1
					}
					hidden_effect = {
						var:victim_country = {
							country_event = {
								id = rus_brigdes.1
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
	
			success = {
				victim_effects = {
					set_global_flag = {
						flag = CRIMEA_STRAIT_BLOCKED
						days = 60
						value = 1
					}
					hidden_effect = {
						var:victim_country = {
							country_event = {
								id = rus_brigdes.1
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}

			critical_success = {
				victim_effects = {
					set_global_flag = {
						flag = CRIMEA_STRAIT_BLOCKED
					}
					hidden_effect = {
						var:victim_country = {
							country_event = {
								id = rus_brigdes.1
							}
						}
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
		}
	}
}