rus_iskander = {
	specialization = specialization_air 
	icon = GFX_rus_iskander
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = RUS	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = { steel=7 rubber=4 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		rus_iskander_reward = {
			threshold = { 
				min = 20
				max = 100
			}
			weight = {
				base = 40
			}
			option = {
				token = rus_iskander_reward_option
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
							injure_scientist_for_days = 60
						}
					}
				}
			}
		}
	}

	project_output = {
		country_effects = {
			custom_effect_tooltip = rus_iskander_tt
			custom_effect_tooltip = {
				equipment_bonus = {
					rus_ballistic_missile_9M723 = {
						air_range = 0.1
					}
				}
			}
		}
	}
}

rus_umpk = {
	specialization = specialization_air 
	icon = GFX_rus_umpk_umpb
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = RUS	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = { steel=8 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		rus_umpk_reward = {
			threshold = { 
				min = 20
				max = 100
			}
			weight = {
				base = 25
			}
			option = {
				token = rus_umpk_reward_option
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
						FROM = { add_stability = -0.03 }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
							injure_scientist_for_days = 60
						}
					}
				}
			}
		}
	}

	project_output = {
		equipment_bonus = {
			RUS_cas_equipment_su24m = {
				air_bombing = 0.08
			}
		}
		equipment_bonus = {
			RUS_cas_equipment_su24m2 = {
				air_bombing = 0.12
			}
		}
		equipment_bonus = {
			RUS_cas_equipment_su34 = {
				air_bombing = 0.18
			}
		}
		equipment_bonus = {
			RUS_cas_equipment_su34m = {
				air_bombing = 0.2
			}
		}
	}
}

rus_umpb = {
	specialization = specialization_air 
	icon = GFX_rus_umpk_umpb
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = RUS	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = { steel=8 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		rus_umpb_reward = {
			threshold = { 
				min = 20
				max = 100
			}
			weight = {
				base = 25
			}
			option = {
				token = rus_umpb_reward_option
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
						FROM = { add_stability = -0.03 }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
							injure_scientist_for_days = 60
						}
					}
				}
			}
		}
	}

	project_output = {
		equipment_bonus = {
			RUS_cas_equipment_su34 = {
				air_bombing = 0.10
			}
		}
		equipment_bonus = {
			RUS_cas_equipment_su34m = {
				air_bombing = 0.12
			}
		}
		equipment_bonus = {
			RUS_fighter_equipment_su30s = {
				air_bombing = 0.15
			}
		}
		equipment_bonus = {
			RUS_fighter_equipment_su30m2 = {
				air_bombing = 0.16
			}
		}
		equipment_bonus = {
			RUS_fighter_equipment_su35s = {
				air_bombing = 0.18
			}
		}
	}
}

rus_drones = {
	specialization = specialization_air 
	icon = GFX_rus_drones
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = RUS	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = { steel=8 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		rus_drones_reward = {
			threshold = { 
				min = 20
				max = 100
			}
			weight = {
				base = 25
			}
			option = {
				token = rus_drones_reward_option
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
						FROM = { add_stability = -0.03 }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
							injure_scientist_for_days = 60
						}
					}
				}
			}
		}
	}

	project_output = {
		country_effects = {
			custom_effect_tooltip = rus_drones_tt
			custom_effect_tooltip = {
				sub_unit_bonus = { 
					category_tanks = {defense = 0.05}
					category_light_infantry = {defense = 0.05}
					category_front_line = {defense = 0.1}
					category_all_infantry = {defense = 0.05}
					category_support_battalions = {defense = 0.1}
					category_all_armor = {defense = 0.05}
					category_army = {defense = 0.5}
					category_line_artillery = {defense = 0.2}
					category_artillery = {defense = 0.2}
					category_special_forces = {defense = 0.5}
					category_recon = {defense = 0.1}
					category_TOS = {defense = 0.05}
					category_sp_aa = {defense = 0.08}
					category_heavy_art = {defense = 0.15}
					category_towed_art = {defense = 0.15}
					category_Opolchenie = {defense = 0.25}
					category_tank_sov = {defense = 0.05}
					category_ifv_sov = {defense = 0.05}
					category_light_tank_sov = {defense = 0.05}
					category_bmpt = {defense = 0.05}
					category_apc = {defense = 0.05}
				}
			}
		}
	}
}

rus_kh101m = {
	specialization = specialization_air 
	icon = GFX_rus_kh101m
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = RUS	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = { steel=10 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	project_output = {
		enable_equipments = {
			rus_medium_guided_missile_kh101m
		}
		country_effects = {
			custom_effect_tooltip = rus_kh101m_tt
		}
	}
}

#### дроны на оптоволокне
rus_fibopt_drones = {
	specialization = specialization_air 
	icon = GFX_rus_fibopt_drones
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = RUS	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = { steel=4 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		rus_drones_reward = {
			threshold = { 
				min = 20
				max = 100
			}
			weight = {
				base = 25
			}
			option = {
				token = rus_drones_reward_option
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
						FROM = { add_stability = -0.03 }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
							injure_scientist_for_days = 60
						}
					}
				}
			}
		}
	}

	project_output = {
		country_effects = {
			custom_effect_tooltip = rus_fibopt_drones_tt
			custom_effect_tooltip = {
				sub_unit_bonus = {
					category_tanks = {defense = 0.05}
					category_light_infantry = {defense = 0.05}
					category_front_line = {defense = 0.1}
					category_all_infantry = {defense = 0.05}
					category_support_battalions = {defense = 0.1}
					category_all_armor = {defense = 0.05}
					category_army = {defense = 0.5}
					category_line_artillery = {defense = 0.2}
					category_artillery = {defense = 0.2}
					category_special_forces = {defense = 0.5}
					category_recon = {defense = 0.1}
					category_TOS = {defense = 0.05}
					category_sp_aa = {defense = 0.08}
					category_heavy_art = {defense = 0.15}
					category_towed_art = {defense = 0.15}
					category_Opolchenie = {defense = 0.25}
					category_tank_sov = {defense = 0.05}
					category_ifv_sov = {defense = 0.05}
					category_light_tank_sov = {defense = 0.05}
					category_bmpt = {defense = 0.05}
					category_apc = {defense = 0.05}
				}
			}
		}
	}
}

######## арешник
rus_oreshnik = {
	specialization = specialization_air 
	icon = GFX_rus_oreshnik
	project_tags = {
		sp_tag_bomb
	}

	allowed = {
		tag = RUS	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = { steel=16 tungsten=8 chromium=10}
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		rus_oreshnik_reward = {
			threshold = { 
				min = 20
				max = 100
			}
			weight = {
				base = 40
			}
			option = {
				token = rus_oreshnik_reward_option
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
							injure_scientist_for_days = 60
						}
					}
				}
			}
		}
	}

	project_output = {
		enable_equipments = {
			rus_ballistic_missile_oreshnik
		}
		country_effects = {
			custom_effect_tooltip = rus_oreshnik_tt
		}
	}
}

rus_x69 = {
	specialization = specialization_air 
	icon = GFX_rus_x69
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = RUS	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = { steel=10 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	project_output = {
		enable_equipments = {
			rus_aircraft_guided_missile_equipment_kh69
		}
		country_effects = {
			custom_effect_tooltip = rus_x69_tt
		}		
	}
} 

rus_tu160m2 = {
	specialization = specialization_air 
	icon = GFX_rus_tu160m2
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = RUS	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = { steel=15 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}
	project_output = {
		enable_equipments = {
			RUS_strat_bomber_equipment_tu160m2
		}
		country_effects = {
			custom_override_tooltip = {
				RUS_strat_bomber_equipment_tu160m2 = 1
				popup = yes
			}
			custom_effect_tooltip = rus_tu160m2_tt
			custom_effect_tooltip = {
				equipment_bonus = {
					RUS_strat_bomber_equipment_tu95ms = {
						air_range = 0.05
					}
				}
				equipment_bonus = {
					RUS_strat_bomber_equipment_tu22m3 = {
						air_range = 0.05
					}
				}
				equipment_bonus = {
					RUS_strat_bomber_equipment_tu22m3m = {
						air_range = 0.05
					}
				}
				equipment_bonus = {
					RUS_strat_bomber_equipment_tu95msm = {
						air_range = 0.1
					}
				}
				equipment_bonus = {
					RUS_strat_bomber_equipment_tu160 = {
						air_range = 0.15
					}
				}
				equipment_bonus = {
					RUS_strat_bomber_equipment_tu160m2 = {
						air_range = 0.15
					}
				}
				equipment_bonus = {
					RUS_strat_bomber_equipment_tu160m3 = {
						air_range = 0.15
					}
				}
			}
		}
	}
}

