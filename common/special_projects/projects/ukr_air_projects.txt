ukr_e300 = {
	specialization = specialization_air 
	icon = GFX_ukr_e300
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = UKR
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 200
	complexity = 60

	resource_cost = {
		resources = { steel=10 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	project_output = {
		enable_equipments = {
			ukr_guided_uav_e300enterprise
		}
		country_effects = {
			custom_effect_tooltip = ukr_e300_tt
		}
	}
}

ukr_palyanutsia = {
	specialization = specialization_air 
	icon = GFX_ukr_palyanutsia
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = UKR
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 300
	complexity = 70

	resource_cost = {
		resources = { steel=10 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	project_output = {
		enable_equipments = {
			ukr_drone_missile_equipment_palanytsya
		}
		country_effects = {
			custom_effect_tooltip = ukr_palyanutsia_tt
		}
	}
}

ukr_sapsan = {
	specialization = specialization_air 
	icon = GFX_ukr_sapsan
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = UKR
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 300
	complexity = 70

	resource_cost = {
		resources = { steel=5 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	project_output = {
		enable_equipments = {
			ukr_ballistic_missile_sapsan
		}
		country_effects = {
			custom_effect_tooltip = ukr_sapsan_tt
		}
	}
}

ukr_frakensam = {
	specialization = specialization_air 
	icon = GFX_ukr_frakensam
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = UKR
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 260
	complexity = 60

	resource_cost = {
		resources = { steel=7 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}
	project_output = {
		country_effects = {
			custom_effect_tooltip = ukr_frakensam_tt
			# enable_equipments = {
				
			# }
		}
	}
}

ukr_thunder = {
	specialization = specialization_air 
	icon = GFX_ukr_thunder
	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = UKR
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 280
	complexity = 60

	resource_cost = {
		resources = { steel=8 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	project_output = {
		enable_equipments = {
			ukr_light_guided_missile_thunder
		}
		country_effects = {
			custom_effect_tooltip = ukr_thunder_tt
		}
	}
}

ukr_missile_compatibility = {
	specialization = specialization_air 

	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		tag = UKR
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 280
	complexity = 60

	resource_cost = {
		resources = { steel=8 }
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	project_output = {
		country_effects = {
			custom_effect_tooltip = ukr_missile_compatibility_tt
			# enable_equipments = {
			# }
		}
	}
}

ukr_typhoon_4 = {
	specialization = specialization_air 

	allowed = {
		tag = UKR	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = {tungsten=4 chromium=2}
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		ukr_typhoon_4_reward = {
			threshold = { 
				min = 20
				max = 100
			}
			weight = {
				base = 40
			}
			option = {
				token = ukr_typhoon_4_reward_option
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
							injure_scientist_for_days = 60
						}
					}
				}
			}
		}
	}
	project_output = {
		country_effects = {
			custom_effect_tooltip = ukr_typhoon_4_tt
			# custom_effect_tooltip = {
			# }
		}
	}
}

ukr_ty141 = {
	specialization = specialization_air 

	allowed = {
		tag = UKR	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = {tungsten=4 chromium=2}
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		ukr_ty141_reward = {
			threshold = { 
				min = 20
				max = 100
			}
			weight = {
				base = 40
			}
			option = {
				token = ukr_ty141_reward_option
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
							injure_scientist_for_days = 60
						}
					}
				}
			}
		}
	}
	project_output = {
		country_effects = {
			custom_effect_tooltip = ukr_ty141_tt
			# custom_effect_tooltip = {
			# }
		}
	}
}

ukr_advanced_EW = {
	specialization = specialization_air 

	allowed = {
		tag = UKR	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = {tungsten=4 chromium=2}
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		ukr_advanced_EW_reward = {
			threshold = { 
				min = 20
				max = 100
			}
			weight = {
				base = 40
			}
			option = {
				token = ukr_advanced_EW_reward_option
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
							injure_scientist_for_days = 60
						}
					}
				}
			}
		}
	}
	project_output = {
		country_effects = {
			custom_effect_tooltip = ukr_advanced_EW_tt
			custom_effect_tooltip = {
				sub_unit_bonus = {
					category_tanks = {defense = 0.05}
					category_light_infantry = {defense = 0.05}
					category_front_line = {defense = 0.1}
					category_all_infantry = {defense = 0.05}
					category_support_battalions = {defense = 0.1}
					category_all_armor = {defense = 0.05}
					category_army = {defense = 0.5}
					category_line_artillery = {defense = 0.2}
					category_artillery = {defense = 0.2}
					category_special_forces = {defense = 0.5}
					category_recon = {defense = 0.1}
					category_TOS = {defense = 0.05}
					category_sp_aa = {defense = 0.08}
					category_heavy_art = {defense = 0.15}
					category_towed_art = {defense = 0.15}
					category_Opolchenie = {defense = 0.25}
					category_tank_sov = {defense = 0.05}
					category_ifv_sov = {defense = 0.05}
					category_light_tank_sov = {defense = 0.05}
					category_bmpt = {defense = 0.05}
					category_apc = {defense = 0.05}
				}
			}
		}
	}
}

ukr_r36m = {
	specialization = specialization_air 

	project_tags = {
		sp_tag_bomb
	}

	allowed = {
		tag = UKR	
	}
	breakthrough_cost = {
		specialization_air = 1
	}

	prototype_time = 270
	complexity = 60

	resource_cost = {
		resources = { steel=20 tungsten=16 chromium=14}
	}
	
	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		ukr_r36m_reward = {
			threshold = { 
				min = 20
				max = 100
			}
			weight = {
				base = 40
			}
			option = {
				token = ukr_r36m_reward_option
				
				iteration_output = {
					facility_state_effects = {
						damage_building = {
							tags = facility
							damage = 0.25
							province = var:facility_province_id
						}
						damage_building = {
							type = infrastructure 
							damage = 0.15
						}
					}

					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
					}

					scientist_effects = {
						if = {
							limit = {
								has_scientist_level = {
									level < 5
									specialization = specialization_land
								}
							}
							add_scientist_xp = {
								experience = constant:sp_scientist_xp_gain.low
								specialization = specialization_land
							}
							injure_scientist_for_days = 60
						}
					}
				}
			}
		}
	}
	project_output = {
		enable_equipments = {
			ukr_ballistic_missile_satana
		}
		country_effects = {
			custom_effect_tooltip = ukr_r36m_tt
		}
	}
}