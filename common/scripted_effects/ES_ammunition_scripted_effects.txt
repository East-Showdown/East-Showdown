ammunition_on_daily = {
    ammunition_tick_country = yes
	ammunition_tick_country_units_leaders = yes

	ammunition_calculate_generation = yes
	ammunition_calculate_consumption = yes
	ammunition_calculate_storage_capacity = yes
	ammunition_calculate_tick_result_value = yes
}


ammunition_tick_country = {
	if = {
        limit = { # Оптимизация
            OR = { # Перерасчёт максимального потребления боеприпасов, если изменилось число юнитов или прошло больше N дней
                NOT = { check_variable = { num_battalions_prev = num_battalions } } 
                check_variable = { ammunition_next_update_num_days < global.num_days }
            }
        }
        
        set_variable = { num_battalions_prev = num_battalions }
        set_variable = { ammunition_next_update_num_days = global.num_days }
        add_to_variable = { ammunition_next_update_num_days = global.ammunition_next_update_num_days_max_delay_country }

        ammunition_update_max_usage = yes
    }
}

ammunition_tick_country_units_leaders = {
	set_variable = { commanded_divisions = 0 }
	set_variable = { divisions_in_offensive_combat = 0 }
	set_variable = { divisions_in_defensive_combat = 0 }

    set_variable = { ammunition_consumption_offensive_base_k = 0 }
    set_variable = { ammunition_consumption_defensive_base_k = 0 }

	every_army_leader = {
		limit = {
            is_assigned = yes
            is_leading_army_group = no
        }

		add_to_variable = { PREV.commanded_divisions = num_units }
		add_to_variable = { PREV.divisions_in_offensive_combat = num_units_offensive_combats }
		add_to_variable = { PREV.divisions_in_defensive_combat = num_units_defensive_combats }

        if = {
            limit = { # Оптимизация
                OR = { # Перерасчёт максимального потребления боеприпасов, если изменилось число юнитов или прошло больше N дней
                    NOT = { check_variable = { num_battalions_prev = num_battalions } } 
                    check_variable = { ammunition_next_update_num_days < global.num_days }
                }
            }
            
            set_variable = { num_battalions_prev = num_battalions }
            set_variable = { ammunition_next_update_num_days = global.num_days }
            add_to_variable = { ammunition_next_update_num_days = global.ammunition_next_update_num_days_max_delay_army_leader }

            ammunition_update_max_usage = yes

            set_variable = { ammunition_default_average_unit_consumption_k = ammunition_default_max_consumption_k }
            divide_variable = { ammunition_default_average_unit_consumption_k = num_units }
        }

        set_variable = { ammunition_leader_consumption_offensive_base_k = num_units_offensive_combats }
        multiply_variable = { ammunition_leader_consumption_offensive_base_k = ammunition_default_average_unit_consumption_k }
        add_to_variable = { PREV.ammunition_consumption_offensive_base_k = ammunition_leader_consumption_offensive_base_k }

        set_variable = { ammunition_leader_consumption_defensive_base_k = num_units_defensive_combats }
        multiply_variable = { ammunition_leader_consumption_defensive_base_k = ammunition_default_average_unit_consumption_k }
        add_to_variable = { PREV.ammunition_consumption_defensive_base_k = ammunition_leader_consumption_defensive_base_k }
	}
}


ammunition_update_max_usage = {  
    set_variable = { ammunition_default_max_consumption_k = 0 }

    # Пехота
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@infantry }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_infantry }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Морпехи
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@marine }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_marine }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Горнострелки
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@mountaineers }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_mountaineers }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Парашютисты на вертолётах
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@paratrooper_heli }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_paratrooper_heli }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Парашютисты
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@paratrooper }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_paratrooper }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Ополчение
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@opolchenie }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_opolchenie }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Зеки
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@prisoners }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_prisoners }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Вагнер
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@PMC_wagner }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_PMC_wagner }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Спецназ
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@spetsnaz }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_spetsnaz }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Пограничники
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@border_guard }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_border_guard }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Артиллерия
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@artillery }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_artillery }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Самоходная артиллерия
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@sp_art }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_sp_art }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Самоходная тяж. артиллерия
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@sp_heavy_art }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_sp_heavy_art }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Буксируемая артиллерия
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@towed_art }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_towed_art }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # ТОС
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@TOS }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_TOS }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # РСЗО
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@MRLS }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_MRLS }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # БТР
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@apc }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_apc }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # БМП СССР
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@ifv_sov }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_ifv_sov }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # БМП США
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@ifv_usa }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_ifv_usa }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # БМП Германии
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@ifv_ger }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_ifv_ger }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # БМП Англии
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@ifv_eng }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_ifv_eng }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # БМП Франции
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@ifv_fra }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_ifv_fra }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # БМП Италии
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@ifv_ita }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_ifv_ita }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # БМП Швеции
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@ifv_swe }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_ifv_swe }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # БМД СССР
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@afv_sov }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_afv_sov }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # БМПТ
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@bmpt }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_bmpt }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Танки СССР
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@tank_sov }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_tank_sov }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Танки США
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@tank_usa }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_tank_usa }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Танки Германии
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@tank_ger }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_tank_ger }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Танки Англии
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@tank_eng }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_tank_eng }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Танки Франции
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@tank_fra }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_tank_fra }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }

    # Танки Италии
    set_temp_variable = { temp_ammunition_consumption_k = num_battalions_with_type@tank_ita }
    multiply_temp_variable = { temp_ammunition_consumption_k = ROOT.battalion_ammunition_consumption_k_tank_ita }
    add_to_variable = { ammunition_default_max_consumption_k = temp_ammunition_consumption_k }
}


# THIS scope is COUNTRY
# Вычисляем генерацию боеприпасов
ammunition_calculate_generation = {	
    # Подготавливаем множитель эффективность заводов по производству боеприпасов
	set_variable = { ammunition_plants_efficiency_factor_var = 1 }
	add_to_variable = { ammunition_plants_efficiency_factor_var = modifier@ammunition_plants_efficiency_factor }
	clamp_variable = { var = ammunition_plants_efficiency_factor_var min = 0 }

    # Высчитываем соотношение распределения мощностей заводов боеприпасов на производство и на восстановление боеприпасов
    clamp_variable = { var = ammunition_produce_to_recovery_factor min = 0 max = 1 }   
    set_variable = { ammunition_produce_factor = ammunition_produce_to_recovery_factor }
    set_variable = { ammunition_recovery_factor = 1 }
    subtract_from_variable = { ammunition_recovery_factor = ammunition_produce_to_recovery_factor }

    # Высчитываем объём производства заводов
    set_variable = { ammunition_plans_production_base_value = modifier@daily_ammunition_gain }
    divide_variable = { ammunition_plans_production_base_value = 1000 }

    set_variable = { ammunition_plans_production_value = ammunition_plans_production_base_value }
    multiply_variable = { ammunition_plans_production_value = ammunition_plants_efficiency_factor_var }

    # Высчитываем восстановление старых боеприпасов
    set_variable = { ammunition_recovery_efficiency_factor_var = 1 }
    subtract_from_variable = { ammunition_recovery_efficiency_factor_var = modifier@ammunition_recovery_efficiency_factor }
    clamp_variable = { var = ammunition_recovery_efficiency_factor_var min = 0 }

    set_variable = { ammunition_recovery_value_k = ammunition_plans_production_value }
    multiply_variable = { ammunition_recovery_value_k = ammunition_recovery_factor }
    multiply_variable = { ammunition_recovery_value_k = ammunition_recovery_efficiency_factor_var }

    # Очищаем излишек мощностей восстановления старых боеприпасов
    set_variable = { ammunition_recovery_excess_factor = 0 }

    if = { # Если пытается восстановить больше старых боеприпасов, чем есть на складе
        limit = { check_variable = { ammunition_recovery_value_k > ammunition_old_value_k } }

        # Высчитываем, сколько лишних процентов от восстановления перераспределить на производство новых боеприпасов
        set_variable = { ammunition_recovery_excess_factor = ammunition_recovery_value_k }
        subtract_from_variable = { ammunition_recovery_excess_factor = ammunition_old_value_k }
        divide_variable = { ammunition_recovery_excess_factor = ammunition_recovery_value_k }
    }

    # Высчитываем производство новых боеприпасов
    set_variable = { ammunition_produce_efficiency_factor_var = 1 }
    subtract_from_variable = { ammunition_produce_efficiency_factor_var = modifier@ammunition_produce_efficiency_factor }
    clamp_variable = { var = ammunition_produce_efficiency_factor_var min = 0 }


    

    

    # Высчитываем производство новых боеприпасов
    set_variable = { ammunition_produce_value_k = ammunition_produce_to_recovery_factor }
    add_to_variable = { ammunition_produce_value_k = ammunition_recovery_excess_factor }
    multiply_variable = { ammunition_produce_value_k = modifier@ammunition_produce_efficiency_factor }
    clamp_variable = { var = ammunition_produce_value_k min = 0 } 
    multiply_variable = { ammunition_produce_value_k = ammunition_produce_value_factor_var }
}

# THIS scope is COUNTRY
# Вычисляет расход боеприпасов страны
ammunition_calculate_consumption = {	
    # Подготавливаем к использованию множитель расхода боеприпасов юнитам
	set_variable = { ammunition_consumption_factor_var = 1 }
	add_to_variable = { ammunition_consumption_factor_var = modifier@ammunition_consumption_factor }
	clamp_variable = { var = ammunition_consumption_factor_var min = 0 }
	
    # Обнуляем переменную-счётчик расхода боеприпасов
	set_variable = { ammunition_consumption_k = 0 }

    if = {
        limit = { original_tag = RUS }
        log = "commanded_divisions = [?commanded_divisions]"
        log = "ammunition_consumption_offensive_base_k [?ammunition_consumption_offensive_base_k]"
        log = "ammunition_consumption_offensive_factor_var [?ammunition_consumption_offensive_factor_var]"
        log = "ammunition_consumption_factor_var [?ammunition_consumption_factor_var]"
    }

	if = { # Если у страны есть юниты под командованием генералов
		limit = { check_variable = { commanded_divisions > 0 } }

        # Высчитываем расход боеприпасов от атакующих юнитов
		set_variable = { ammunition_consumption_offensive_k = ammunition_consumption_offensive_base_k }
		multiply_variable = { ammunition_consumption_offensive_k = ammunition_consumption_offensive_factor_var }  
		multiply_variable = { ammunition_consumption_offensive_k = ammunition_consumption_factor_var }  

        # Суммируем в расход боеприпасов расход от атакующих юнитов
		add_to_variable = { ammunition_consumption_k = ammunition_consumption_offensive_k }
		
        # Высчитываем расход боеприпасов от обороняющихся юнитов
		set_variable = { ammunition_consumption_defensive_k = ammunition_consumption_defensive_base_k }
		multiply_variable = { ammunition_consumption_defensive_k = ammunition_consumption_defensive_factor_var }  
		multiply_variable = { ammunition_consumption_defensive_k = ammunition_consumption_factor_var }  

        # Суммируем в расход боеприпасов расход от обороняющихся юнитов
		add_to_variable = { ammunition_consumption_k = ammunition_consumption_defensive_k }
	}
}

# THIS scope is COUNTRY
# Высчитывает вместимость всех складов страны
ammunition_calculate_storage_capacity = {
    # Учитываем базовую вместимость складов от построек
	set_variable = { ammunition_max_storage_capacity_k = modifier@ammunition_capacity_k }

    # Учитываем вместимость полевых складов юнитов (персональный запас юнитов на N дней)
	set_variable = { ammunition_field_storage_capacity_k = ammunition_default_max_consumption_k }
	multiply_variable = { ammunition_field_storage_capacity_k = ammunition_field_storage_for_consumption_days }
	add_to_variable = { ammunition_max_storage_capacity_k = ammunition_field_storage_capacity_k }
}

ammunition_calculate_tick_result_value = {	
    # Высчитываем итоговую генерацию готовых к бою боеприпасов
    set_variable = { ammunition_generation_value_k = ammunition_produce_value_k }
    add_to_variable = { ammunition_generation_value_k = ammunition_recovery_value_k }

    # Высчитываем итоговое потребление готовых к бою боеприпасов
    # TODO: Добавить дополнительные траты (передача боеприпасов, возврат на резервные склады)

    # Высчитываем изменение количества готовых к применению боеприпасов
	set_variable = { ammunition_delta_value_k = ammunition_generation_value_k }
	subtract_from_variable = { ammunition_delta_value_k = ammunition_consumption_k }

    # Снимаем со склада неготовые к применению (старые) боеприпасы
    subtract_from_variable = { ammunition_old_value_k = ammunition_recovery_value_k }
    # Добавляем на склад изменение количества готовых к применение боеприпасов
	add_to_variable = { ammunition_value_k = ammunition_delta_value_k }

    # Вычисляем суммарное количество боеприпасов на складе
    set_variable = { sum_ammunition_value_k = ammunition_value_k }
    add_to_variable = { sum_ammunition_value_k = ammunition_old_value_k }
    
    # Убираем лишние боеприпасы, если необходимо
    ammunition_remove_excess_ammunition_if_needed = yes

    # Проверяем, чтобы кол-во боеприпасов не ушло в минус
    clamp_variable = { var = ammunition_value_k min = 0 }
    clamp_variable = { var = ammunition_old_value_k min = 0 }
        
    set_variable = { ammo_ratio_var = ammunition_value_k }
    divide_variable = { ammo_ratio_var = ammunition_max_storage_capacity_k }
    multiply_variable = { ammo_ratio_var = 100 }

    set_variable = { ammo_days_to_full = ammunition_max_storage_capacity_k }
    subtract_from_variable = { ammo_days_to_full = ammunition_value_k }
    divide_variable = { ammo_days_to_full = ammunition_delta_value_k }

    set_variable = { ammo_days_to_empty = ammunition_value_k }
    divide_variable = { ammo_days_to_empty = ammunition_delta_value_k }
    multiply_variable = { ammo_days_to_empty = -1 }

    if = {
        limit = { check_variable = { ammunition_delta_value_k > 0 } }
        set_variable = { ammo_frame_var = 2 }
    }
    else_if = {
        limit = { check_variable = { ammunition_delta_value_k < 0 } }
        set_variable = { ammo_frame_var = 3 }
    } else = {
        set_variable = { ammo_frame_var = 1 }
    }
}


# THIS scope is COUNTRY
ammunition_remove_excess_ammunition_if_needed = {
    # Вычисляем, сколько боеприпасов выходит за пределы объёма складов
    set_temp_variable = { temp_ammunition_excess_value_k = sum_ammunition_value_k }
    subtract_from_temp_variable = { temp_ammunition_excess_value_k = ammunition_max_storage_capacity_k }

    if = { # Если слишком много боеприпасов на складах
        limit = { check_variable = { temp_ammunition_excess_value_k > 0 }}

        if = { # Если превышение вместимости больше, чем количество старых боеприпасов
            limit = { check_variable = { ammunition_old_value_k < temp_ammunition_excess_value_k } }

            # Убираем полностью старые боеприпасы
            subtract_from_temp_variable = { temp_ammunition_excess_value_k = ammunition_old_value_k }
            set_variable = { ammunition_old_value_k = 0 }

            # Убираем лишние готовые к использованию боеприпасы
            clamp_variable = {
                var = ammunition_value_k
                max = ammunition_max_storage_capacity_k
            }
        }
        else = { # Иначе превышение вместимости миньше или равно количеству старых боеприпасов
            subtract_from_variable = { ammunition_old_value_k = temp_ammunition_excess_value_k }
        }
    }
}