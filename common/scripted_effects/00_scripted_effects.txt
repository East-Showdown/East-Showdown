#	Example:
#
#	example_effect = {
#		add_political_power = 66
#		add_popularity = {
#			ideology = fascism
#			popularity = 0.33
#		}
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

#####################################
### emergency_factory_conversion ####
#####################################

#This is going to give misleading and ugly tooltips. Making it nice will take effort. TODO_WTT_CD make nice or ignore and remove comment. Easiest solution is just making a custom tooltip that says "5 civilian factories will be converted to military factories" and ignore telling the player the states where it will happen.

replace_civ_with_arms_factories = {

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
}

#Country scope
ROOT_inherit_current_scope_wars_effect = {
	custom_effect_tooltip = ROOT_inherit_current_scope_wars_effect
	hidden_effect = {
		every_country = {
			limit = {
				has_defensive_war_with = PREV
			}
			ROOT = { declare_war_on = { target = PREV type = annex_everything } }
		}
		every_country = {
			limit = {
				has_offensive_war_with = PREV
			}
			declare_war_on = { target = ROOT type = annex_everything }
		}
	}
}

get_best_alliance_match_democratic_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	if = {
		limit = {
			any_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = democratic
				not = { has_war_with = ROOT }
				set_temp_variable = { ROOT.best_leader = this }
				set_temp_variable = { ROOT.best_leader_score = 0 }
			}
		}
	}
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = democratic
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}
}

get_best_alliance_match_fascism_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	if = {
		limit = {
			any_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = fascism
				not = { has_war_with = ROOT }
				set_temp_variable = { ROOT.best_leader = this }
				set_temp_variable = { ROOT.best_leader_score = 0 }
			}
		}
	}
	if = {
		limit = {
			all_other_country = {

				is_faction_leader = yes
				is_major = yes
				has_government = fascism
				not = { has_war_with = ROOT }

				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { this.leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { this.leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < this.leader_score }
					}
					set_temp_variable = { ROOT.best_leader = this }
					set_temp_variable = { ROOT.best_leader_score = this.leader_score }
				}
			}
		}
	}
}

get_best_alliance_match_communism_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	if = {
		limit = {
			any_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = communism
				not = { has_war_with = ROOT }
				set_temp_variable = { ROOT.best_leader = this }
				set_temp_variable = { ROOT.best_leader_score = 0 }
			}
		}
	}
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = communism
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}
}

clear_sabotaged_resources_if_necesary = {
	if = {
		limit = {
			not = {
				has_dynamic_modifier = {
					modifier = sabotaged_resources
				}
			}
		}

		clear_variable = sabotaged_oil
		clear_variable = sabotaged_aluminium
		clear_variable = sabotaged_rubber
		clear_variable = sabotaged_tungsten
		clear_variable = sabotaged_steel
		clear_variable = sabotaged_chromium
	}
}

remove_from_allowed_party = {
	if = {
		limit = { has_government = democratic }
		set_temp_variable = { allowed_party_democratic = 0 }
	}
	else_if = {
		limit = { has_government = fascism }
		set_temp_variable = { allowed_party_fascism = 0 }
	}
	else_if = {
		limit = { has_government = communism }
		set_temp_variable = { allowed_party_communism = 0 }
	}
	else_if = {
		limit = { has_government = neutrality }
		set_temp_variable = { allowed_party_neutrality = 0 }
	}
}

#expectes a temp variable country_to_initiate which should contain original_tag to instantiate as a collabration government
instantiate_collaboration_government = {
	custom_effect_tooltip = compliance_80_effect_tooltip
	hidden_effect = {
		set_variable = { collaboration_formed@var:country_to_initiate = 1 }

		if = {
			# if country_to_initiate does not exist, simply release it as a puppet
			limit = {
				var:country_to_initiate = {
					exists = no
				}
			}
			var:country_to_initiate = { set_variable = { collaboration_formed_by = PREV } }
			release_autonomy = {
				target = country_to_initiate
				autonomy_state = autonomy_collaboration_government
				freedom_level = 0.5
				release_non_owned_controlled = yes
			}
		}
		else = {
			# if country_to_initiate exists, create a dynamic country as our new puppet

			create_dynamic_country = {
				original_tag = country_to_initiate

				set_variable = { collaboration_formed_by = PREV }
				set_temp_variable = { new_country = this }

				PREV = {
					every_controlled_state = {
						limit = { occupied_country_tag = country_to_initiate }

						var:new_country = {
							transfer_state = PREV
						}
					}

					puppet = new_country

					set_autonomy = {
						target = new_country
						autonomy_state = autonomy_collaboration_government
						freedom_level = 0.5
					}
				}
			}
		}
	}
}

upgrade_economy_law = {
	if = {
		limit = {
			has_idea = civilian_economy
		}
		add_ideas = low_economic_mobilisation
	}
	else_if = {
		limit = {
			has_idea = low_economic_mobilisation
		}
		add_ideas = partial_economic_mobilisation
	}
	else_if = {
		limit = {
			has_idea = partial_economic_mobilisation
		}
		add_ideas = war_economy
	}
	else_if = {
		limit = {
			has_idea = war_economy
		}
		add_ideas = tot_economic_mobilisation
	}
	else = {
		add_political_power = 150
	}
}

#Should remove any and all fascist foreign influence, to be updated
remove_fascist_spirits_effect = {
	if = {
		limit = { has_idea = fascist_influence }
		remove_ideas = fascist_influence
	}
}

#Should remove any and all communist foreign influence
remove_communist_spirits_effect = {
	if = {
		limit = { has_idea = agitated_peasants }
		remove_ideas = agitated_peasants
	}
	if = {
		limit = { has_idea = armed_communist_militants }
		remove_ideas = armed_communist_militants
	}
}

#Should remove any and all democratic foreign influence
remove_democratic_spirits_effect = {
	if = {
		limit = { has_idea = democratic_influence }
		remove_ideas = democratic_influence
	}
}

#Adds current ruling popularity to a new ideology - useful to represent ideological shifts within the same party
add_ruling_to_dem = {
	custom_effect_tooltip = add_ruling_to_dem_tt
	hidden_effect = {
		if = {
			limit = {
				has_government = neutrality
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				democratic_support_var = neutrality_support_var
			}
			set_variable = {
				var = neutrality_support_var
				value = 0
			}
		}
		if = {
			limit = {
				has_government = communism
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				democratic_support_var = communism_support_var
			}
			set_variable = {
				var = communism_support_var
				value = 0
			}
		}
		if = {
			limit = {
				has_government = fascism
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				democratic_support_var = fascism_support_var
			}
			set_variable = {
				var = fascism_support_var
				value = 0
			}
		}
		set_popularities = {
			democratic = democratic_support_var
			neutrality = neutrality_support_var
			fascism = fascism_support_var
			communism = communism_support_var
		}
	}
}
add_ruling_to_fas = {
	custom_effect_tooltip = add_ruling_to_fas_tt
	hidden_effect = {
		if = {
			limit = {
				has_government = neutrality
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				fascism_support_var = neutrality_support_var
			}
			set_variable = {
				var = neutrality_support_var
				value = 0
			}
		}
		if = {
			limit = {
				has_government = communism
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				fascism_support_var = communism_support_var
			}
			set_variable = {
				var = communism_support_var
				value = 0
			}
		}
		if = {
			limit = {
				has_government = democratic
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				fascism_support_var = democratic_support_var
			}
			set_variable = {
				var = democratic_support_var
				value = 0
			}
		}
		set_popularities = {
			democratic = democratic_support_var
			neutrality = neutrality_support_var
			fascism = fascism_support_var
			communism = communism_support_var
		}
	}
}
add_ruling_to_com = {
	custom_effect_tooltip = add_ruling_to_com_tt
	hidden_effect = {
		if = {
			limit = {
				has_government = neutrality
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				communism_support_var = neutrality_support_var
			}
			set_variable = {
				var = neutrality_support_var
				value = 0
			}
		}
		if = {
			limit = {
				has_government = fascism
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				communism_support_var = fascism_support_var
			}
			set_variable = {
				var = fascism_support_var
				value = 0
			}
		}
		if = {
			limit = {
				has_government = democratic
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				communism_support_var = democratic_support_var
			}
			set_variable = {
				var = democratic_support_var
				value = 0
			}
		}
		set_popularities = {
			democratic = democratic_support_var
			neutrality = neutrality_support_var
			fascism = fascism_support_var
			communism = communism_support_var
		}
	}
}
add_ruling_to_neu = {
	custom_effect_tooltip = add_ruling_to_neu_tt
	hidden_effect = {
		if = {
			limit = {
				has_government = communism
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				neutrality_support_var = communism_support_var
			}
			set_variable = {
				var = communism_support_var
				value = 0
			}
		}
		if = {
			limit = {
				has_government = fascism
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				neutrality_support_var = fascism_support_var
			}
			set_variable = {
				var = fascism_support_var
				value = 0
			}
		}
		if = {
			limit = {
				has_government = democratic
			}
			set_variable = {
				var = neutrality_support_var
				value = party_popularity_100@neutrality
			}
			set_variable = {
				var = democratic_support_var
				value = party_popularity_100@democratic
			}
			set_variable = {
				var = communism_support_var
				value = party_popularity_100@communism
			}
			set_variable = {
				var = fascism_support_var
				value = party_popularity_100@fascism
			}
			add_to_variable = {
				neutrality_support_var = democratic_support_var
			}
			set_variable = {
				var = democratic_support_var
				value = 0
			}
		}
		set_popularities = {
			democratic = democratic_support_var
			neutrality = neutrality_support_var
			fascism = fascism_support_var
			communism = communism_support_var
		}
	}
}


on_daily = {

}

#on_daily_USA = {
#	# you can specify an on daily action for a specific country
#}

set_subject_cosmetic_tags = {
	every_country = {
		limit = {
			OR = {
				is_subject_of = ENG
				is_subject_of = FRA
			}
		}
		if = {
			limit = {
				tag = UAE
				is_subject_of = ENG
			}
			set_cosmetic_tag = UAE_ENG
		}
		if = {
			limit = {
				tag = QAT
				is_subject_of = ENG
			}
			set_cosmetic_tag = QAT_ENG
		}
		if = {
			limit = {
				tag = KUW
				is_subject_of = ENG
			}
			set_cosmetic_tag = KUW_ENG
		}
		if = {
			limit = {
				tag = TUN
				is_subject_of = FRA
			}
			set_cosmetic_tag = TUN_FRA
		}
		if = {
			limit = {
				tag = MOR
				is_subject_of = FRA
			}
			set_cosmetic_tag = MOR_FRA
		}
	}
}

update_BLR_opposition_activity_var_effects = {

	set_temp_variable = {
		var = BLR_opposition_activity_stability_factor_temp
		value = BLR_opposition_activity_var
	}
	multiply_temp_variable = {
		var = BLR_opposition_activity_stability_factor_temp
		value = -0.05
	}
	set_variable = {
		var = BLR_opposition_activity_stability_factor
		value = BLR_opposition_activity_stability_factor_temp
	}
	set_temp_variable = {
		var = BLR_opposition_activity_war_support_factor_temp
		value = BLR_opposition_activity_var
	}
	multiply_temp_variable = {
		var = BLR_opposition_activity_war_support_factor_temp
		value = -0.075
	}
	set_variable = {
		var = BLR_opposition_activity_war_support_factor
		value = BLR_opposition_activity_war_support_factor_temp
	}
	set_temp_variable = {
		var = BLR_opposition_activity_neutrality_drift_temp
		value = BLR_opposition_activity_var
	}
	multiply_temp_variable = {
		var = BLR_opposition_activity_neutrality_drift_temp
		value = -0.007
	}
	set_variable = {
		var = BLR_opposition_activity_neutrality_drift
		value = BLR_opposition_activity_neutrality_drift_temp
	}
	set_temp_variable = {
		var = BLR_opposition_activity_fascism_drift_temp
		value = BLR_opposition_activity_var
	}
	multiply_temp_variable = {
		var = BLR_opposition_activity_fascism_drift_temp
		value = 0.01
	}
	set_variable = {
		var = BLR_opposition_activity_fascism_drift
		value = BLR_opposition_activity_fascism_drift_temp
	}
	set_temp_variable = {
		var = BLR_opposition_activity_political_power_factor_temp
		value = BLR_opposition_activity_var
	}
	multiply_temp_variable = {
		var = BLR_opposition_activity_political_power_factor_temp
		value = -0.035
	}
	set_variable = {
		var = BLR_opposition_activity_political_power_factor
		value = BLR_opposition_activity_political_power_factor_temp
	}
	set_temp_variable = {
		var = BLR_opposition_activity_industrial_capacity_factory_temp
		value = BLR_opposition_activity_var
	}
	multiply_temp_variable = {
		var = BLR_opposition_activity_industrial_capacity_factory_temp
		value = -0.02
	}
	set_variable = {
		var = BLR_opposition_activity_industrial_capacity_factory
		value = BLR_opposition_activity_industrial_capacity_factory_temp
	}
	set_temp_variable = {
		var = BLR_opposition_activity_production_factory_efficiency_gain_factor_temp
		value = BLR_opposition_activity_var
	}
	multiply_temp_variable = {
		var = BLR_opposition_activity_production_factory_efficiency_gain_factor_temp
		value = -0.005
	}
	set_variable = {
		var = BLR_opposition_activity_production_factory_efficiency_gain_factor
		value = BLR_opposition_activity_production_factory_efficiency_gain_factor_temp
	}
	set_temp_variable = {
		var = BLR_opposition_activity_army_org_factor_temp
		value = BLR_opposition_activity_var
	}
	multiply_temp_variable = {
		var = BLR_opposition_activity_army_org_factor_temp
		value = -0.025
	}
	set_variable = {
		var = BLR_opposition_activity_army_org_factor
		value = BLR_opposition_activity_army_org_factor_temp
	}
}
RBZ_state_update = {
	RUS = {
		set_temp_variable = {
			var = RUS_stability_save
			value = var:stability
		}
		set_temp_variable = {
			var = RUS_war_support_save
			value = var:has_war_support
		}
		set_temp_variable = {
			var = RUS_neutrality_save
			value = party_popularity_100@neutrality
		}
		set_temp_variable = {
			var = RUS_democratic_save
			value = party_popularity_100@democratic
		}
		set_temp_variable = {
			var = RUS_communism_save
			value = party_popularity_100@communism
		}
		set_temp_variable = {
			var = RUS_fascism_save
			value = party_popularity_100@fascism
		}
	}
	set_stability = RUS_stability_save
	set_war_support = RUS_war_support_save
	set_popularities = {
		neutrality = RUS_neutrality_save
		democratic = RUS_democratic_save
		communism = RUS_communism_save
		fascism = RUS_fascism_save
	}
	inherit_technology = RUS
	set_research_slots = 0
}

RUS_mobilize_MVD_skripted_effects = {
    if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 237
						}
						DPR = {
							controls_state = 237
						}
					}
				}
				237 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 213
						}
						DPR = {
							controls_state = 213
						}
					}
				}
				213 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 182
						}
						DPR = {
							controls_state = 182
						}
					}
				}
				182 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 149
						}
						DPR = {
							controls_state = 149
						}
					}
				}
				149 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 165
						}
						DPR = {
							controls_state = 165
						}
					}
				}
				165 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 176
						}
						LPR = {
							controls_state = 176
						}
					}
				}
				176 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 145
						}
						LPR = {
							controls_state = 145
						}
					}
				}
				145 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 154
						}
						LPR = {
							controls_state = 154
						}
					}
				}
				154 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 116
						}
						LPR = {
							controls_state = 116
						}
					}
				}
				116 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 125
						}
						LPR = {
							controls_state = 125
						}
					}
				}
				125 = {
					add_resistance = -5
				}
			}
		    if = {
				limit = {
					RUS = {
						controls_state = 264
					}
				}
				264 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 262
					}
				}
				262 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 240
					}
				}
				240 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 251
					}
				}
				251 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 253
					}
				}
				253 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 231
					}
				}
				231 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 269
					}
				}
				269 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 276
					}
				}
				276 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 291
					}
				}
				291 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 289
					}
				}
				289 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 266
					}
				}
				266 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 226
					}
				}
				226 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 246
					}
				}
				246 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 242
					}
				}
				242 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 223
					}
				}
				223 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 208
					}
				}
				208 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 107
					}
				}
				107 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 139
					}
				}
				139 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 133
					}
				}
				133 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 138
					}
				}
				138 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 130
					}
				}
				130 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 101
					}
				}
				101 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 103
					}
				}
				103 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 100
					}
				}
				100 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 197
					}
				}
				197 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 169
					}
				}
				169 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 216
					}
				}
				216 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 187
					}
				}
				187 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 156
					}
				}
				156 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 151
					}
				}
				151 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 162
					}
				}
				162 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 180
					}
				}
				180 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 186
					}
				}
				186 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 233
					}
				}
				233 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 215
					}
				}
				215 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 209
					}
				}
				209 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 202
					}
				}
				202 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 203
					}
				}
				203 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 235
					}
				}
				235 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 227
					}
				}
				227 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 256
					}
				}
				256 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 271
					}
				}
				271 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 268
					}
				}
				268 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 296
					}
				}
				296 = {
					add_resistance = -5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 310
					}
				}
				310 = {
					add_resistance = -5
				}
			}
}

RUS_OSN_Thunder_skripted_effects = {
    if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 237
						}
						DPR = {
							controls_state = 237
						}
					}
				}
				237 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 213
						}
						DPR = {
							controls_state = 213
						}
					}
				}
				213 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 182
						}
						DPR = {
							controls_state = 182
						}
					}
				}
				182 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 149
						}
						DPR = {
							controls_state = 149
						}
					}
				}
				149 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 165
						}
						DPR = {
							controls_state = 165
						}
					}
				}
				165 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 176
						}
						LPR = {
							controls_state = 176
						}
					}
				}
				176 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 145
						}
						LPR = {
							controls_state = 145
						}
					}
				}
				145 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 154
						}
						LPR = {
							controls_state = 154
						}
					}
				}
				154 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 116
						}
						LPR = {
							controls_state = 116
						}
					}
				}
				116 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
				    OR = {
						RUS = {
							controls_state = 125
						}
						LPR = {
							controls_state = 125
						}
					}
				}
				125 = {
					add_resistance = -3 add_compliance = 5
				}
			}
		    if = {
				limit = {
					RUS = {
						controls_state = 264
					}
				}
				264 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 262
					}
				}
				262 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 240
					}
				}
				240 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 251
					}
				}
				251 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 253
					}
				}
				253 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 231
					}
				}
				231 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 269
					}
				}
				269 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 276
					}
				}
				276 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 291
					}
				}
				291 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 289
					}
				}
				289 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 266
					}
				}
				266 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 226
					}
				}
				226 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 246
					}
				}
				246 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 242
					}
				}
				242 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 223
					}
				}
				223 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 208
					}
				}
				208 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 107
					}
				}
				107 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 139
					}
				}
				139 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 133
					}
				}
				133 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 138
					}
				}
				138 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 130
					}
				}
				130 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 101
					}
				}
				101 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 103
					}
				}
				103 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 100
					}
				}
				100 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 197
					}
				}
				197 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 169
					}
				}
				169 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 216
					}
				}
				216 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 187
					}
				}
				187 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 156
					}
				}
				156 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 151
					}
				}
				151 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 162
					}
				}
				162 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 180
					}
				}
				180 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 186
					}
				}
				186 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 233
					}
				}
				233 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 215
					}
				}
				215 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 209
					}
				}
				209 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 202
					}
				}
				202 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 203
					}
				}
				203 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 235
					}
				}
				235 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 227
					}
				}
				227 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 256
					}
				}
				256 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 271
					}
				}
				271 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 268
					}
				}
				268 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 296
					}
				}
				296 = {
					add_resistance = -3 add_compliance = 5
				}
			}
			if = {
				limit = {
					RUS = {
						controls_state = 310
					}
				}
				310 = {
					add_resistance = -3 add_compliance = 5
				}
			}
}

RUS_retreat_from_kyiv_effect = {
	67 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	114 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	88 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	81 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	93 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	76 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	65 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	143 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	140 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	118 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	115 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	106 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	104 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	94 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	86 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	73 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	68 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	166 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	155 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	168 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	147 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	131 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	124 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	119 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	153 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	181 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	142 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	170 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	179 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	129 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	137 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	132 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	150 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	135 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	121 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	108 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	112 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	110 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	109 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	92 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	90 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	75 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	79 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	63 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	62 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	64 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
}

RUS_retreat_from_sumy_effect = {
    111 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	123 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	98 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	87 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 302
		}
		transfer_state_to = UKR
	}
	95 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	83 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 302
		}
		transfer_state_to = UKR
	}
	105 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 371
		}
		transfer_state_to = UKR
	}
	89 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 371
		}
		transfer_state_to = UKR
	}
	96 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 371
		}
		transfer_state_to = UKR
	}
	72 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 377
		}
		transfer_state_to = UKR
	}
	102 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 50
		}
		transfer_state_to = UKR
	}
	80 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 302
		}
		transfer_state_to = UKR
	}
	82 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 377
		}
		transfer_state_to = UKR
	}
	66 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 306
		}
		transfer_state_to = UKR
	}
	69 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 302
		}
		transfer_state_to = UKR
	}
	59 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 302
		}
		transfer_state_to = UKR
	}
	60 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 302
		}
		transfer_state_to = UKR
	}
	56 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 272
		}
		transfer_state_to = UKR
	}
	57 = {
		teleport_armies = {
			limit = {
			    OR = {
					TAG = RUS
					TAG = WGN
					TAG = CHE
					TAG = BLR
					TAG = LPR
					TAG = DPR
				}
			}
            to_state = 272
		}
		transfer_state_to = UKR
	}
}

UKR_Volunteer_movement_scripted_effects = {
    #Находим множитель для количества снаряжения от общего количества очков
	set_temp_variable = { UKR_volunteerACT_divider = UKR_volunteerACT }
	divide_temp_variable = { UKR_volunteerACT_divider = 100 }
	set_variable = { UKR_multiplier_volunteer_movement_var = UKR_volunteerACT_divider }
	
	#Устанавливаем количество снаряжения по умолчанию
	set_variable = { UKR_volunteer_movement_infantry_weapons_d_var = 500 }
	set_variable = { UKR_volunteer_movement_infantry_weapons_1_d_var = 250 }
	set_variable = { UKR_volunteer_movement_NTO_infantry_weapons_d_var = 150 }
	set_variable = { UKR_volunteer_movement_NTO_infantry_weapons_1_d_var = 75 }
	set_variable = { UKR_volunteer_movement_support_d_var = 750 }
	set_variable = { UKR_volunteer_movement_motorization_d_var = 30 }
	set_variable = { UKR_volunteer_movement_motorization_eq_d_var = 50 }
	set_variable = { UKR_volunteer_movement_NTO_motorization_d_var = 15 }
	set_variable = { UKR_volunteer_movement_drones_d_var = 20 }
	set_variable = { UKR_volunteer_movement_NTO_drones_d_var = 10 }
	set_variable = { UKR_volunteer_movement_NTO_drones_5_d_var = 5 }
	set_variable = { UKR_volunteer_movement_ammunition_d_var = 1 }
	set_variable = { UKR_volunteer_movement_motorized_equipment_1_d_var = 500 }
	
	#Умножаем снаряжение на множитель
	multiply_variable = { UKR_volunteer_movement_infantry_weapons_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_infantry_weapons_1_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_NTO_infantry_weapons_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_NTO_infantry_weapons_1_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_support_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_motorization_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_NTO_motorization_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_drones_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_NTO_drones_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_ammunition_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_motorization_eq_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_NTO_drones_5_d_var = UKR_multiplier_volunteer_movement_var }
	multiply_variable = { UKR_volunteer_movement_motorized_equipment_1_d_var = UKR_multiplier_volunteer_movement_var }
	
	round_variable = UKR_volunteer_movement_infantry_weapons_d_var
	round_variable = UKR_volunteer_movement_infantry_weapons_1_d_var
	round_variable = UKR_volunteer_movement_NTO_infantry_weapons_d_var
	round_variable = UKR_volunteer_movement_NTO_infantry_weapons_1_d_var
	round_variable = UKR_volunteer_movement_support_d_var
	round_variable = UKR_volunteer_movement_motorization_d_var
	round_variable = UKR_volunteer_movement_NTO_motorization_d_var
	round_variable = UKR_volunteer_movement_drones_d_var
	round_variable = UKR_volunteer_movement_NTO_drones_d_var
	round_variable = UKR_volunteer_movement_motorization_eq_d_var
	round_variable = UKR_volunteer_movement_NTO_drones_5_d_var
	round_variable = UKR_volunteer_movement_motorized_equipment_1_d_var
	
	#Переменная боеприпасов для локи
	set_temp_variable = { UKR_volunteer_movement_ammunition_d_divider_var = UKR_volunteer_movement_ammunition_d_var }
	multiply_variable = { UKR_volunteer_movement_ammunition_d_divider_var = 10 }
	set_variable = { UKR_volunteer_movement_ammunition_d_var_for_loc = UKR_volunteer_movement_ammunition_d_divider_var }
}

UKR_economy_status_scripted_effects = {
    clear_variable = UKR_economy_status_research_speed_factor
	clear_variable = UKR_economy_status_stability_factor
	clear_variable = UKR_economy_status_repair_speed_factor
	clear_variable = UKR_economy_status_consumer_goods_factor
	clear_variable = UKR_economy_status_production_speed_buildings_factor
	clear_variable = UKR_economy_status_production_factory_max_efficiency_factor
	clear_variable = UKR_economy_status_production_factory_efficiency_gain_factor
	clear_variable = UKR_economy_status_production_speed_industrial_complex_factor


	if = {
		limit = {
			check_variable = {
				var = UKR_Economic_Collapse
				value = 400
				compare = greater_than_or_equals 
			}
		}
	    set_variable = { UKR_economy_status_research_speed_factor = -0.4 }
		set_variable = { UKR_economy_status_stability_factor = -0.2 }
		set_variable = { UKR_economy_status_repair_speed_factor = -0.5 }
		set_variable = { UKR_economy_status_consumer_goods_factor = 0.2 }
		set_variable = { UKR_economy_status_production_speed_buildings_factor = -0.5 }
		set_variable = { UKR_economy_status_production_factory_max_efficiency_factor = -0.2 }
		set_variable = { UKR_economy_status_production_factory_efficiency_gain_factor = -0.25 }
		set_variable = { UKR_economy_status_production_speed_industrial_complex_factor = -0.3 }
	}
	if = {
		limit = {
			check_variable = {
				var = UKR_Economic_Collapse
				value = 300
				compare = greater_than_or_equals
			}
			check_variable = {
			    var = UKR_Economic_Collapse
			    value = 400
			    compare = less_than
			}	
		}
	    set_variable = { UKR_economy_status_research_speed_factor = -0.2 }
		set_variable = { UKR_economy_status_stability_factor = -0.1 }
		set_variable = { UKR_economy_status_repair_speed_factor = -0.2 }
		set_variable = { UKR_economy_status_consumer_goods_factor = 0.1 }
		set_variable = { UKR_economy_status_production_speed_buildings_factor = -0.2 }
		set_variable = { UKR_economy_status_production_factory_max_efficiency_factor = -0.1 }
		set_variable = { UKR_economy_status_production_factory_efficiency_gain_factor = -0.15 }
		set_variable = { UKR_economy_status_production_speed_industrial_complex_factor = -0.2 }
	}
	if = {
		limit = {
			check_variable = {
				var = UKR_Economic_Collapse
				value = 200
				compare = greater_than_or_equals
			}
			check_variable = {
			    var = UKR_Economic_Collapse
			    value = 300
			    compare = less_than
			}	
		}
	    set_variable = { UKR_economy_status_research_speed_factor = -0.1 }
		set_variable = { UKR_economy_status_stability_factor = -0.1 }
		set_variable = { UKR_economy_status_repair_speed_factor = -0.15 }
		set_variable = { UKR_economy_status_consumer_goods_factor = 0.1 }
		set_variable = { UKR_economy_status_production_speed_buildings_factor = -0.15 }
		set_variable = { UKR_economy_status_production_factory_max_efficiency_factor = -0.075 }
		set_variable = { UKR_economy_status_production_factory_efficiency_gain_factor = -0.1 }
		set_variable = { UKR_economy_status_production_speed_industrial_complex_factor = -0.15 }
	}
	if = {
		limit = {
			check_variable = {
				var = UKR_Economic_Collapse
				value = 100
				compare = greater_than_or_equals
			}
			check_variable = {
			    var = UKR_Economic_Collapse
			    value = 200
			    compare = less_than
			}
		}
	    set_variable = { UKR_economy_status_research_speed_factor = -0.05 }
		set_variable = { UKR_economy_status_stability_factor = -0.075 }
		set_variable = { UKR_economy_status_repair_speed_factor = -0.06 }
		set_variable = { UKR_economy_status_consumer_goods_factor = 0.075 }
		set_variable = { UKR_economy_status_production_speed_buildings_factor = -0.1 }
		set_variable = { UKR_economy_status_production_factory_max_efficiency_factor = -0.05 }
		set_variable = { UKR_economy_status_production_factory_efficiency_gain_factor = -0.075 }
		set_variable = { UKR_economy_status_production_speed_industrial_complex_factor = -0.1 }
	}
	if = {
		limit = {
			check_variable = {
				var = UKR_Economic_Collapse
				value = 1
				compare = greater_than_or_equals
			}
			check_variable = {
				var = UKR_Economic_Collapse
				value = 100
				compare = less_than
			}
		}
	    set_variable = { UKR_economy_status_research_speed_factor = -0.035 }
		set_variable = { UKR_economy_status_stability_factor = -0.05 }
		set_variable = { UKR_economy_status_consumer_goods_factor = 0.035 }
		set_variable = { UKR_economy_status_production_speed_buildings_factor = -0.05 }
		set_variable = { UKR_economy_status_production_factory_efficiency_gain_factor = -0.05 }
		set_variable = { UKR_economy_status_production_speed_industrial_complex_factor = -0.05 }
	}
	if = {
		limit = {
			check_variable = {
				var = UKR_Economic_Collapse
				value = 1
				compare = less_than
			}
		}
	    remove_dynamic_modifier = { modifier = UKR_economy_status }
	}
}

Novorossia_united_SE = {
	transfer_state = 203
	transfer_state = 202
	transfer_state = 209
	transfer_state = 215
	transfer_state = 197
	transfer_state = 169
	transfer_state = 235
	transfer_state = 227
	transfer_state = 256
	transfer_state = 233
	transfer_state = 274
	transfer_state = 271
	transfer_state = 268
	transfer_state = 296
	transfer_state = 310
	transfer_state = 651
	transfer_state = 253
	transfer_state = 231
	transfer_state = 652
	transfer_state = 653
	transfer_state = 654
	transfer_state = 187
	transfer_state = 216
	transfer_state = 210
	transfer_state = 671
	transfer_state = 156
	transfer_state = 151
	transfer_state = 130
	transfer_state = 101
	transfer_state = 103
	transfer_state = 100
	transfer_state = 162
	transfer_state = 133
	transfer_state = 138
	transfer_state = 107
	transfer_state = 139
	transfer_state = 180
	transfer_state = 186
	transfer_state = 667
	transfer_state = 673
	transfer_state = 670
	transfer_state = 669
	transfer_state = 208
	transfer_state = 222
	transfer_state = 668
	transfer_state = 663
	transfer_state = 672
	transfer_state = 656
	transfer_state = 660
	transfer_state = 666
	transfer_state = 242
	transfer_state = 665
	transfer_state = 664
	transfer_state = 661
	transfer_state = 246
	transfer_state = 662
	transfer_state = 657
	transfer_state = 223
	transfer_state = 655
	transfer_state = 251
	transfer_state = 287
	transfer_state = 289
	transfer_state = 646
	transfer_state = 647
	transfer_state = 648
	transfer_state = 658
	transfer_state = 659
	transfer_state = 226
	transfer_state = 649
	transfer_state = 650
	transfer_state = 645
	transfer_state = 413
	transfer_state = 240
	transfer_state = 643
	transfer_state = 644
	transfer_state = 262
	transfer_state = 264
	transfer_state = 642
	transfer_state = 291
	transfer_state = 269
	transfer_state = 276
	transfer_state = 266
	transfer_state = 658
}

Ukraine_united_SE = {
	every_owned_state = {
		limit = {
			is_core_of = UKR
			Ukraine_united_SE_trigger = no
		}
		transfer_state_to = UKR
    }
	puppet = UKR
	68 = {
		set_demilitarized_zone = yes
	}
}

WUR_se_united = {
	transfer_state = 110
	transfer_state = 121
	transfer_state = 142
	transfer_state = 181
	transfer_state = 179
	transfer_state = 192
	transfer_state = 170
	transfer_state = 135
	transfer_state = 76
	transfer_state = 65
	transfer_state = 63
	transfer_state = 75
	transfer_state = 90
	transfer_state = 109
	transfer_state = 92
	transfer_state = 108
	transfer_state = 112
	transfer_state = 137
	transfer_state = 129
	transfer_state = 132
	transfer_state = 150
	transfer_state = 177
	transfer_state = 198
	transfer_state = 190
	transfer_state = 193
	transfer_state = 185
	transfer_state = 174
	transfer_state = 195
	transfer_state = 167
	transfer_state = 157
	transfer_state = 62
	transfer_state = 64
	transfer_state = 79
}