#	Example:
#
#	example_trigger = {
#		tag = GER
#		is_ai = no
#	}
#
#
#	In a script file:
#
#	trigger = {
#		exampel_trigger = yes
#	}
#
can_ROOT_get_wargoal_on_THIS = {
	exists = yes
	NOT = {
		is_in_faction_with = ROOT
	}
	NOT = {
		is_subject_of = ROOT
	}
}

is_border_conflict_defender_vs_FROM = {
	has_variable = ROOT.defender_state_vs_@FROM
}

has_not_initiated_border_incident_with_FROM = {
	custom_trigger_tooltip = {
		tooltip = not_initiated_border_incident_with_FROM
		NOT = {
			any_state = {
				check_variable = {
					FROM.defender_state_vs_@PREV = id
				}
			}
		}
	}
}

has_not_initiated_border_incident_with_ROOT = {
	custom_trigger_tooltip = {
		tooltip = not_initiated_border_incident_with_ROOT
		NOT = {
			any_state = {
				check_variable = {
					ROOT.defender_state_vs_@PREV = id
				}
			}
		}
	}
}

#State scope
has_ROOT_at_least_1_div_in_current_state_scope = {
	custom_trigger_tooltip = {
		tooltip = at_least_one_division_in_state
		ROOT = {
			divisions_in_state = {
				state = PREV
				size > 0
			}
		}
	}
}

#State scope
is_controlled_by_ROOT_or_subject = {
	custom_trigger_tooltip = {
		tooltip = is_controlled_by_ROOT_or_subject
		CONTROLLER = {
			OR = {
				tag = ROOT
				is_subject_of = ROOT
			}
		}
	}
}

#Country scope
is_free_or_subject_of_root = {
	OR = {
		is_subject = no
		is_subject_of = ROOT
	}
}

#State scope
is_controlled_by_ROOT_or_ally = {
	custom_trigger_tooltip = {
		tooltip = is_controlled_by_ROOT_or_ally
		CONTROLLER = {
			OR = {
				tag = ROOT
				is_subject_of = ROOT
				is_in_faction_with = ROOT
			}
		}
	}
}

ai_air_doctrine_tier_1_trigger = {
	OR = {
		#	has_tech = naval_strike_tactics
		#	has_tech = direct_ground_support
		#	has_tech = low_echelon_support
	}
}

ai_air_doctrine_tier_2_trigger = {
	OR = {
		#	has_tech = multialtitude_flying
		#	has_tech = hunt_and_destroy
		#	has_tech = operational_destruction
	}
}

ai_air_doctrine_tier_3_trigger = {
	OR = {
		#	has_tech = flying_fortress
		#	has_tech = naval_strike_torpedo_tactics
		#	has_tech = infiltration_bombing
	}
}

ai_land_doctrine_tier_1_trigger = {
	OR = {
		#	has_tech = elastic_defence
		#	has_tech = mobile_defence
		#	has_tech = grand_assault
		#	has_tech = defence_in_depth
	}
}

ai_land_doctrine_tier_2_trigger = {
	OR = {
		#	has_tech = kampfgruppe
		#	has_tech = mechanised_offensive
		#	has_tech = branch_interoperation
		#	has_tech = infiltration_assault
		#	has_tech = vast_offensives
		#	has_tech = large_front_offensive
	}
}

enemy_has_equal_or_better_radar_tech_trigger = {
	custom_trigger_tooltip = {
		tooltip = enemy_has_equal_or_better_radar_tech_trigger_tt
		if = {
			limit = {
				ROOT = {
					has_tech = radio_detection
					NOT = {
						has_tech = decimetric_radar
					}
				}
			}
			FROM = {
				OR = {
					has_tech = radio_detection
					has_tech = decimetric_radar
				}
			}
		}
		else_if = {
			limit = {
				ROOT = {
					has_tech = decimetric_radar
					NOT = {
						has_tech = improved_decimetric_radar
					}
				}
			}
			FROM = {
				OR = {
					has_tech = decimetric_radar
					has_tech = improved_decimetric_radar
				}
			}
		}
		else_if = {
			limit = {
				ROOT = {
					has_tech = improved_decimetric_radar
					NOT = {
						has_tech = centimetric_radar
					}
				}
			}
			FROM = {
				OR = {
					has_tech = improved_decimetric_radar
					has_tech = centimetric_radar
				}
			}
		}
		else_if = {
			limit = {
				ROOT = {
					has_tech = centimetric_radar
					NOT = {
						has_tech = improved_centimetric_radar
					}
				}
			}
			FROM = {
				OR = {
					has_tech = centimetric_radar
					has_tech = improved_centimetric_radar
				}
			}
		}
		else_if = {
			limit = {
				ROOT = {
					has_tech = improved_centimetric_radar
					NOT = {
						has_tech = advanced_centimetric_radar
					}
				}
			}
			FROM = {
				OR = {
					has_tech = improved_centimetric_radar
					has_tech = advanced_centimetric_radar
				}
			}
		}
		#no more steps needed because end of research tree is reached
	}
}

has_large_ally_not_pick_closed_economy = {
	any_of_scopes = {
		array = faction_members
		NOT = {
			tag = PREV
		}
		num_of_military_factories > 30
	}
}

owns_or_subject_of = {
	custom_trigger_tooltip = {
		tooltip = owns_or_subject_of_tt
		owner = {
			OR = {
				tag = ROOT
				is_subject_of = ROOT
			}
		}
	}
}

controls_or_subject_of = {
	custom_trigger_tooltip = {
		tooltip = controls_or_subject_of_tt
		controller = {
			OR = {
				tag = ROOT
				is_subject_of = ROOT
			}
		}
	}
}

is_core_or_compliance_60 = {
	custom_trigger_tooltip = {
		tooltip = is_core_or_compliance_60_tt
		OR = {
			controller = {
				PREV = {
					is_core_of = PREV
				}
			}
			compliance > 60
		}
	}
}

has_same_ideology = {
	custom_trigger_tooltip = {
		tooltip = has_same_ideology_tt
		OR = {
			AND = {
				has_government = democratic
				ROOT = {
					has_government = democratic
				}
			}
			AND = {
				has_government = fascism
				ROOT = {
					has_government = fascism
				}
			}
			AND = {
				has_government = communism
				ROOT = {
					has_government = communism
				}
			}
			AND = {
				has_government = neutrality
				ROOT = {
					has_government = neutrality
				}
			}
		}
	}
}

has_specialist_level_trigger = {
	skill > 5
	skill < 6
}

has_expert_level_trigger = {
	skill > 6
	skill < 7
}

has_genius_level_trigger = {
	skill > 7
}

anti_submarine_strategy_required_trigger = {
	AND = {
		has_war = yes
		any_enemy_country = {
			has_navy_size = {
				type = submarine
				size > 30
			}
		}
	}
	convoy_threat > 0.3
}

is_available_to_collaboration_government = {
	# occupied_countries.1 should be updated along with this
	NOT = {
		any_country_with_original_tag = {
			original_tag_to_check = FROM
			is_puppet_of = PREV			# if already created one do not create another
			has_autonomy_state = autonomy_collaboration_government
		}
	}
}

red_state_belgorod_trigger = {
	if = {
		limit = { original_tag = UKR }
		any_other_country = { full_control_of_belgorod = yes has_war_with = UKR }
	}
	else_if = {
		limit = { original_tag = RUS }
		UKR = { full_control_of_belgorod = yes has_war_with = RUS }
	}
}

grey_state_belgorod_trigger = {
	if = {
		limit = { original_tag = UKR }
		any_other_country = { full_control_of_belgorod = yes }
	}
	else_if = {
		limit = { original_tag = RUS }
		UKR = { full_control_of_belgorod = yes }
	}
}

green_state_belgorod_trigger = {
	ROOT = { full_control_of_belgorod = yes }
}

yellow_state_belgorod_trigger = {
	NOT = {
		OR = {
			any_other_country = { full_control_of_belgorod = yes }
			UKR = { full_control_of_belgorod = yes }
		}
	}
}


##DPR_shelling_GUI_triggers

DPR_petrovsky_rayon_RUS_trigger = {
	OR = {
		RUS = { controls_province = 18739 }
		DPR = { controls_province = 18739 }
	}
}

DPR_petrovsky_rayon_UKR_trigger = {
	OR = {
		UKR = { controls_province = 18739 }
	}
}

DPR_kirovsky_rayon_RUS_trigger = {
	OR = {
		RUS = {
			controls_province = 18813
			controls_province = 1427
		}
		DPR = {
			controls_province = 18813
			controls_province = 1427
		}
	}
}

DPR_kirovsky_rayon_UKR_trigger = {
	OR = {
		UKR = {
			controls_province = 18813
			controls_province = 1427
		}
	}
}

DPR_kirovsky_rayon_CB_trigger = {
	NOT = {
		OR = {
			UKR = {
				controls_province = 18813
				controls_province = 1427
			}
			RUS = {
				controls_province = 18813
				controls_province = 1427
			}
			DPR = {
				controls_province = 18813
				controls_province = 1427
			}
		}
	}
}

DPR_kuibishevsky_rayon_RUS_trigger = {
	OR = {
		RUS = {
			controls_province = 18149
			controls_province = 16185
		}
		DPR = {
			controls_province = 18149
			controls_province = 16185
		}
	}
}

DPR_kuibishevsky_rayon_UKR_trigger = {
	OR = {
		UKR = {
			controls_province = 18149
			controls_province = 16185
		}
	}
}

DPR_kuibishevsky_rayon_CB_trigger = {
	NOT = {
		OR = {
			UKR = {
				controls_province = 18149
				controls_province = 16185
			}
			RUS = {
				controls_province = 18149
				controls_province = 16185
			}
			DPR = {
				controls_province = 18149
				controls_province = 16185
			}
		}
	}
}

DPR_kyivsky_rayon_RUS_trigger = {
	OR = {
		RUS = {
			controls_province = 18506
			controls_province = 18151
			controls_province = 4400
		}
		DPR = {
			controls_province = 18506
			controls_province = 18151
			controls_province = 4400
		}
	}
}

DPR_kyivsky_rayon_UKR_trigger = {
	UKR = {
		controls_province = 18506
		controls_province = 18151
		controls_province = 4400
	}
}

DPR_kyivsky_rayon_CB_trigger = {
	NOT = {
		OR = {
			RUS = {
				controls_province = 18506
				controls_province = 18151
				controls_province = 4400
			}
			DPR = {
				controls_province = 18506
				controls_province = 18151
				controls_province = 4400
			}
			UKR = {
				controls_province = 18506
				controls_province = 18151
				controls_province = 4400
			}
		}
	}
}

DPR_leninsky_rayon_RUS_trigger = {
	OR = {
		RUS = {
			controls_province = 18150
			controls_province = 16034
		}
		DPR = {
			controls_province = 18150
			controls_province = 16034
		}
	}
}

DPR_leninsky_rayon_UKR_trigger = {
	OR = {
		UKR = {
			controls_province = 18150
			controls_province = 16034
		}
	}
}

DPR_leninsky_rayon_CB_trigger = {
	NOT = {
		OR = {
			UKR = {
				controls_province = 18150
				controls_province = 16034
			}
			RUS = {
				controls_province = 18150
				controls_province = 16034
			}
			DPR = {
				controls_province = 18150
				controls_province = 16034
			}
		}
	}
}

DPR_voroshilovsky_and_kalinisky_rayon_RUS_trigger = {
	OR = {
		RUS = {
			controls_province = 1661
			controls_province = 18153
		}
		DPR = {
			controls_province = 1661
			controls_province = 18153
		}
	}
}

DPR_voroshilovsky_and_kalinisky_rayon_UKR_trigger = {
	OR = {
		UKR = {
			controls_province = 1661
			controls_province = 18153
		}
	}
}

DPR_voroshilovsky_and_kalinisky_rayon_CB_trigger = {
	NOT ={
		OR = {
			RUS = {
				controls_province = 1661
				controls_province = 18153
			}
			DPR = {
				controls_province = 1661
				controls_province = 18153
			}
			UKR = {
				controls_province = 1661
				controls_province = 18153
			}
		}
	}
}

DPR_budenovsky_and_proletarsky_rayon_RUS_trigger = {
	OR = {
		RUS = {
			controls_province = 3061
			controls_province = 9305
			controls_province = 12312
			controls_province = 18154
			controls_province = 2761
			controls_province = 1142
			controls_province = 3290
		}
		DPR = {
			controls_province = 3061
			controls_province = 9305
			controls_province = 12312
			controls_province = 18154
			controls_province = 2761
			controls_province = 1142
			controls_province = 3290
		}
	}
}

DPR_budenovsky_and_proletarsky_rayon_UKR_trigger = {
	OR = {
		UKR = {
			controls_province = 3061
			controls_province = 9305
			controls_province = 12312
			controls_province = 18154
			controls_province = 2761
			controls_province = 1142
			controls_province = 3290
		}
	}
}

DPR_budenovsky_and_proletarsky_rayon_CB_trigger = {
	NOT = {
		OR = {
			UKR = {
				controls_province = 3061
				controls_province = 9305
				controls_province = 12312
				controls_province = 18154
				controls_province = 2761
				controls_province = 1142
				controls_province = 3290
			}
			RUS = {
				controls_province = 3061
				controls_province = 9305
				controls_province = 12312
				controls_province = 18154
				controls_province = 2761
				controls_province = 1142
				controls_province = 3290
			}
			DPR = {
				controls_province = 3061
				controls_province = 9305
				controls_province = 12312
				controls_province = 18154
				controls_province = 2761
				controls_province = 1142
				controls_province = 3290
			}
		}
	}
}


DPR_makeevka_conrol_RUS_trigger = {
	OR = {
		RUS = {
			controls_province = 14961
			controls_province = 2262
			controls_province = 18508
			controls_province = 12647
			controls_province = 12552
			controls_province = 18157
			controls_province = 8336
			controls_province = 18158
		}
		DPR = {
			controls_province = 14961
			controls_province = 2262
			controls_province = 18508
			controls_province = 12647
			controls_province = 12552
			controls_province = 18157
			controls_province = 8336
			controls_province = 18158
		}
	}
}

DPR_makeevka_conrol_UKR_trigger = {
	OR = {
		UKR = {
			controls_province = 14961
			controls_province = 2262
			controls_province = 18508
			controls_province = 12647
			controls_province = 12552
			controls_province = 18157
			controls_province = 8336
			controls_province = 18158
		}
	}
}

DPR_makeevka_conrol_CB_trigger = {
	NOT = {
		OR = {
			UKR = {
				controls_province = 14961
				controls_province = 2262
				controls_province = 18508
				controls_province = 12647
				controls_province = 12552
				controls_province = 18157
				controls_province = 8336
				controls_province = 18158
			}

			RUS = {
				controls_province = 14961
				controls_province = 2262
				controls_province = 18508
				controls_province = 12647
				controls_province = 12552
				controls_province = 18157
				controls_province = 8336
				controls_province = 18158
			}

			DPR = {
				controls_province = 14961
				controls_province = 2262
				controls_province = 18508
				controls_province = 12647
				controls_province = 12552
				controls_province = 18157
				controls_province = 8336
				controls_province = 18158
			}
		}
	}
}

Ukraine_united_SE_trigger = {
    OR = {
		state = 203
		state = 202
		state = 209
		state = 215
		state = 197
		state = 169
		state = 235
		state = 227
		state = 256
		state = 233
		state = 274
		state = 271
		state = 268
		state = 296
		state = 310
		state = 651
		state = 253
		state = 231
		state = 652
		state = 653
		state = 654
		state = 187
		state = 216
		state = 210
		state = 671
		state = 156
		state = 151
		state = 130
		state = 101
		state = 103
		state = 100
		state = 162
		state = 133
		state = 138
		state = 107
		state = 139
		state = 180
		state = 186
		state = 667
		state = 673
		state = 670
		state = 669
		state = 208
		state = 222
		state = 668
		state = 663
		state = 672
		state = 656
		state = 660
		state = 666
		state = 242
		state = 665
		state = 664
		state = 661
		state = 246
		state = 662
		state = 657
		state = 223
		state = 655
		state = 251
		state = 287
		state = 289
		state = 646
		state = 647
		state = 648
		state = 658
		state = 659
		state = 226
		state = 649
		state = 650
		state = 645
		state = 413
		state = 240
		state = 643
		state = 644
		state = 262
		state = 264
		state = 642
		state = 291
		state = 269
		state = 276
		state = 266
		state = 237
		state = 213
		state = 182
		state = 149
		state = 165
		state = 145
		state = 154
		state = 176
		state = 125
		state = 116
	}
}
